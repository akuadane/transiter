// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.18.1
// source: api/public.proto

package api

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type System_Status int32

const (
	System_UNKNOWN        System_Status = 0
	System_INSTALLING     System_Status = 1
	System_ACTIVE         System_Status = 2
	System_INSTALL_FAILED System_Status = 3
	System_UPDATING       System_Status = 4
	System_UPDATE_FAILED  System_Status = 5
	System_DELETING       System_Status = 6
)

// Enum value maps for System_Status.
var (
	System_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "INSTALLING",
		2: "ACTIVE",
		3: "INSTALL_FAILED",
		4: "UPDATING",
		5: "UPDATE_FAILED",
		6: "DELETING",
	}
	System_Status_value = map[string]int32{
		"UNKNOWN":        0,
		"INSTALLING":     1,
		"ACTIVE":         2,
		"INSTALL_FAILED": 3,
		"UPDATING":       4,
		"UPDATE_FAILED":  5,
		"DELETING":       6,
	}
)

func (x System_Status) Enum() *System_Status {
	p := new(System_Status)
	*p = x
	return p
}

func (x System_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (System_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_api_public_proto_enumTypes[0].Descriptor()
}

func (System_Status) Type() protoreflect.EnumType {
	return &file_api_public_proto_enumTypes[0]
}

func (x System_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use System_Status.Descriptor instead.
func (System_Status) EnumDescriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{24, 0}
}

type EntrypointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EntrypointRequest) Reset() {
	*x = EntrypointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntrypointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntrypointRequest) ProtoMessage() {}

func (x *EntrypointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntrypointRequest.ProtoReflect.Descriptor instead.
func (*EntrypointRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{0}
}

type EntrypointReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transiter *EntrypointReply_TransiterDetails `protobuf:"bytes,1,opt,name=transiter,proto3" json:"transiter,omitempty"`
	Systems   *CountAndHref                     `protobuf:"bytes,2,opt,name=systems,proto3" json:"systems,omitempty"`
}

func (x *EntrypointReply) Reset() {
	*x = EntrypointReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntrypointReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntrypointReply) ProtoMessage() {}

func (x *EntrypointReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntrypointReply.ProtoReflect.Descriptor instead.
func (*EntrypointReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{1}
}

func (x *EntrypointReply) GetTransiter() *EntrypointReply_TransiterDetails {
	if x != nil {
		return x.Transiter
	}
	return nil
}

func (x *EntrypointReply) GetSystems() *CountAndHref {
	if x != nil {
		return x.Systems
	}
	return nil
}

type ListSystemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListSystemsRequest) Reset() {
	*x = ListSystemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSystemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemsRequest) ProtoMessage() {}

func (x *ListSystemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemsRequest.ProtoReflect.Descriptor instead.
func (*ListSystemsRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{2}
}

type ListSystemsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Systems []*System `protobuf:"bytes,1,rep,name=systems,proto3" json:"systems,omitempty"`
}

func (x *ListSystemsReply) Reset() {
	*x = ListSystemsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSystemsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemsReply) ProtoMessage() {}

func (x *ListSystemsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemsReply.ProtoReflect.Descriptor instead.
func (*ListSystemsReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{3}
}

func (x *ListSystemsReply) GetSystems() []*System {
	if x != nil {
		return x.Systems
	}
	return nil
}

type GetSystemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
}

func (x *GetSystemRequest) Reset() {
	*x = GetSystemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemRequest) ProtoMessage() {}

func (x *GetSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemRequest.ProtoReflect.Descriptor instead.
func (*GetSystemRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{4}
}

func (x *GetSystemRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

type ListAgenciesInSystemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
}

func (x *ListAgenciesInSystemRequest) Reset() {
	*x = ListAgenciesInSystemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgenciesInSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgenciesInSystemRequest) ProtoMessage() {}

func (x *ListAgenciesInSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgenciesInSystemRequest.ProtoReflect.Descriptor instead.
func (*ListAgenciesInSystemRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{5}
}

func (x *ListAgenciesInSystemRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

type ListAgenciesInSystemReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agencies []*AgencyPreviewWithAlerts `protobuf:"bytes,1,rep,name=agencies,proto3" json:"agencies,omitempty"`
}

func (x *ListAgenciesInSystemReply) Reset() {
	*x = ListAgenciesInSystemReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgenciesInSystemReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgenciesInSystemReply) ProtoMessage() {}

func (x *ListAgenciesInSystemReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgenciesInSystemReply.ProtoReflect.Descriptor instead.
func (*ListAgenciesInSystemReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{6}
}

func (x *ListAgenciesInSystemReply) GetAgencies() []*AgencyPreviewWithAlerts {
	if x != nil {
		return x.Agencies
	}
	return nil
}

type GetAgencyInSystemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	AgencyId string `protobuf:"bytes,2,opt,name=agency_id,json=agencyId,proto3" json:"agency_id,omitempty"`
}

func (x *GetAgencyInSystemRequest) Reset() {
	*x = GetAgencyInSystemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgencyInSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgencyInSystemRequest) ProtoMessage() {}

func (x *GetAgencyInSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgencyInSystemRequest.ProtoReflect.Descriptor instead.
func (*GetAgencyInSystemRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{7}
}

func (x *GetAgencyInSystemRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *GetAgencyInSystemRequest) GetAgencyId() string {
	if x != nil {
		return x.AgencyId
	}
	return ""
}

type ListStopsInSystemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
}

func (x *ListStopsInSystemRequest) Reset() {
	*x = ListStopsInSystemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStopsInSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStopsInSystemRequest) ProtoMessage() {}

func (x *ListStopsInSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStopsInSystemRequest.ProtoReflect.Descriptor instead.
func (*ListStopsInSystemRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{8}
}

func (x *ListStopsInSystemRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

type ListStopsInSystemReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stops []*StopPreview `protobuf:"bytes,1,rep,name=stops,proto3" json:"stops,omitempty"`
}

func (x *ListStopsInSystemReply) Reset() {
	*x = ListStopsInSystemReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStopsInSystemReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStopsInSystemReply) ProtoMessage() {}

func (x *ListStopsInSystemReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStopsInSystemReply.ProtoReflect.Descriptor instead.
func (*ListStopsInSystemReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{9}
}

func (x *ListStopsInSystemReply) GetStops() []*StopPreview {
	if x != nil {
		return x.Stops
	}
	return nil
}

type GetStopInSystemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	StopId   string `protobuf:"bytes,2,opt,name=stop_id,json=stopId,proto3" json:"stop_id,omitempty"`
}

func (x *GetStopInSystemRequest) Reset() {
	*x = GetStopInSystemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStopInSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStopInSystemRequest) ProtoMessage() {}

func (x *GetStopInSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStopInSystemRequest.ProtoReflect.Descriptor instead.
func (*GetStopInSystemRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{10}
}

func (x *GetStopInSystemRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *GetStopInSystemRequest) GetStopId() string {
	if x != nil {
		return x.StopId
	}
	return ""
}

type ListRoutesInSystemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
}

func (x *ListRoutesInSystemRequest) Reset() {
	*x = ListRoutesInSystemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoutesInSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoutesInSystemRequest) ProtoMessage() {}

func (x *ListRoutesInSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoutesInSystemRequest.ProtoReflect.Descriptor instead.
func (*ListRoutesInSystemRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{11}
}

func (x *ListRoutesInSystemRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

type ListRoutesInSystemReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Routes []*RoutePreviewWithAlerts `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
}

func (x *ListRoutesInSystemReply) Reset() {
	*x = ListRoutesInSystemReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoutesInSystemReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoutesInSystemReply) ProtoMessage() {}

func (x *ListRoutesInSystemReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoutesInSystemReply.ProtoReflect.Descriptor instead.
func (*ListRoutesInSystemReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{12}
}

func (x *ListRoutesInSystemReply) GetRoutes() []*RoutePreviewWithAlerts {
	if x != nil {
		return x.Routes
	}
	return nil
}

type GetRouteInSystemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	RouteId  string `protobuf:"bytes,2,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
}

func (x *GetRouteInSystemRequest) Reset() {
	*x = GetRouteInSystemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRouteInSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteInSystemRequest) ProtoMessage() {}

func (x *GetRouteInSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouteInSystemRequest.ProtoReflect.Descriptor instead.
func (*GetRouteInSystemRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{13}
}

func (x *GetRouteInSystemRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *GetRouteInSystemRequest) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

type ListTripsInRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	RouteId  string `protobuf:"bytes,2,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
}

func (x *ListTripsInRouteRequest) Reset() {
	*x = ListTripsInRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTripsInRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTripsInRouteRequest) ProtoMessage() {}

func (x *ListTripsInRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTripsInRouteRequest.ProtoReflect.Descriptor instead.
func (*ListTripsInRouteRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{14}
}

func (x *ListTripsInRouteRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *ListTripsInRouteRequest) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

type ListTripsInRouteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trips []*TripPreviewWithAlerts `protobuf:"bytes,1,rep,name=trips,proto3" json:"trips,omitempty"`
}

func (x *ListTripsInRouteReply) Reset() {
	*x = ListTripsInRouteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTripsInRouteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTripsInRouteReply) ProtoMessage() {}

func (x *ListTripsInRouteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTripsInRouteReply.ProtoReflect.Descriptor instead.
func (*ListTripsInRouteReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{15}
}

func (x *ListTripsInRouteReply) GetTrips() []*TripPreviewWithAlerts {
	if x != nil {
		return x.Trips
	}
	return nil
}

type GetTripRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	RouteId  string `protobuf:"bytes,2,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	TripId   string `protobuf:"bytes,3,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
}

func (x *GetTripRequest) Reset() {
	*x = GetTripRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTripRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTripRequest) ProtoMessage() {}

func (x *GetTripRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTripRequest.ProtoReflect.Descriptor instead.
func (*GetTripRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{16}
}

func (x *GetTripRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *GetTripRequest) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

func (x *GetTripRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

type ListFeedsInSystemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
}

func (x *ListFeedsInSystemRequest) Reset() {
	*x = ListFeedsInSystemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeedsInSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeedsInSystemRequest) ProtoMessage() {}

func (x *ListFeedsInSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeedsInSystemRequest.ProtoReflect.Descriptor instead.
func (*ListFeedsInSystemRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{17}
}

func (x *ListFeedsInSystemRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

type ListFeedsInSystemReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feeds []*FeedPreview `protobuf:"bytes,1,rep,name=feeds,proto3" json:"feeds,omitempty"`
}

func (x *ListFeedsInSystemReply) Reset() {
	*x = ListFeedsInSystemReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeedsInSystemReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeedsInSystemReply) ProtoMessage() {}

func (x *ListFeedsInSystemReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeedsInSystemReply.ProtoReflect.Descriptor instead.
func (*ListFeedsInSystemReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{18}
}

func (x *ListFeedsInSystemReply) GetFeeds() []*FeedPreview {
	if x != nil {
		return x.Feeds
	}
	return nil
}

type ListFeedUpdatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	FeedId   string `protobuf:"bytes,2,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
}

func (x *ListFeedUpdatesRequest) Reset() {
	*x = ListFeedUpdatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeedUpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeedUpdatesRequest) ProtoMessage() {}

func (x *ListFeedUpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeedUpdatesRequest.ProtoReflect.Descriptor instead.
func (*ListFeedUpdatesRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{19}
}

func (x *ListFeedUpdatesRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *ListFeedUpdatesRequest) GetFeedId() string {
	if x != nil {
		return x.FeedId
	}
	return ""
}

type ListFeedUpdatesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updates []*FeedUpdate `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
}

func (x *ListFeedUpdatesReply) Reset() {
	*x = ListFeedUpdatesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeedUpdatesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeedUpdatesReply) ProtoMessage() {}

func (x *ListFeedUpdatesReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeedUpdatesReply.ProtoReflect.Descriptor instead.
func (*ListFeedUpdatesReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{20}
}

func (x *ListFeedUpdatesReply) GetUpdates() []*FeedUpdate {
	if x != nil {
		return x.Updates
	}
	return nil
}

type GetFeedInSystemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	FeedId   string `protobuf:"bytes,2,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
}

func (x *GetFeedInSystemRequest) Reset() {
	*x = GetFeedInSystemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeedInSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedInSystemRequest) ProtoMessage() {}

func (x *GetFeedInSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedInSystemRequest.ProtoReflect.Descriptor instead.
func (*GetFeedInSystemRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{21}
}

func (x *GetFeedInSystemRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *GetFeedInSystemRequest) GetFeedId() string {
	if x != nil {
		return x.FeedId
	}
	return ""
}

type ListTransfersInSystemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
}

func (x *ListTransfersInSystemRequest) Reset() {
	*x = ListTransfersInSystemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTransfersInSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTransfersInSystemRequest) ProtoMessage() {}

func (x *ListTransfersInSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTransfersInSystemRequest.ProtoReflect.Descriptor instead.
func (*ListTransfersInSystemRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{22}
}

func (x *ListTransfersInSystemRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

type ListTransfersInSystemReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transfers []*Transfer `protobuf:"bytes,1,rep,name=transfers,proto3" json:"transfers,omitempty"`
}

func (x *ListTransfersInSystemReply) Reset() {
	*x = ListTransfersInSystemReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTransfersInSystemReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTransfersInSystemReply) ProtoMessage() {}

func (x *ListTransfersInSystemReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTransfersInSystemReply.ProtoReflect.Descriptor instead.
func (*ListTransfersInSystemReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{23}
}

func (x *ListTransfersInSystemReply) GetTransfers() []*Transfer {
	if x != nil {
		return x.Transfers
	}
	return nil
}

type System struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status    System_Status `protobuf:"varint,3,opt,name=status,proto3,enum=System_Status" json:"status,omitempty"`
	Agencies  *CountAndHref `protobuf:"bytes,4,opt,name=agencies,proto3,oneof" json:"agencies,omitempty"`
	Feeds     *CountAndHref `protobuf:"bytes,5,opt,name=feeds,proto3,oneof" json:"feeds,omitempty"`
	Routes    *CountAndHref `protobuf:"bytes,6,opt,name=routes,proto3,oneof" json:"routes,omitempty"`
	Stops     *CountAndHref `protobuf:"bytes,7,opt,name=stops,proto3,oneof" json:"stops,omitempty"`
	Transfers *CountAndHref `protobuf:"bytes,8,opt,name=transfers,proto3,oneof" json:"transfers,omitempty"`
	Href      *string       `protobuf:"bytes,9,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *System) Reset() {
	*x = System{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *System) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*System) ProtoMessage() {}

func (x *System) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use System.ProtoReflect.Descriptor instead.
func (*System) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{24}
}

func (x *System) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *System) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *System) GetStatus() System_Status {
	if x != nil {
		return x.Status
	}
	return System_UNKNOWN
}

func (x *System) GetAgencies() *CountAndHref {
	if x != nil {
		return x.Agencies
	}
	return nil
}

func (x *System) GetFeeds() *CountAndHref {
	if x != nil {
		return x.Feeds
	}
	return nil
}

func (x *System) GetRoutes() *CountAndHref {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *System) GetStops() *CountAndHref {
	if x != nil {
		return x.Stops
	}
	return nil
}

func (x *System) GetTransfers() *CountAndHref {
	if x != nil {
		return x.Transfers
	}
	return nil
}

func (x *System) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

type Stop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          *string              `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Longitude     *float64             `protobuf:"fixed64,3,opt,name=longitude,proto3,oneof" json:"longitude,omitempty"`
	Latitude      *float64             `protobuf:"fixed64,4,opt,name=latitude,proto3,oneof" json:"latitude,omitempty"`
	Url           *string              `protobuf:"bytes,5,opt,name=url,proto3,oneof" json:"url,omitempty"`
	StopHeadsigns []string             `protobuf:"bytes,7,rep,name=stop_headsigns,json=stopHeadsigns,proto3" json:"stop_headsigns,omitempty"`
	ParentStop    *RelatedStop         `protobuf:"bytes,13,opt,name=parent_stop,json=parentStop,proto3,oneof" json:"parent_stop,omitempty"`
	ChildStops    []*RelatedStop       `protobuf:"bytes,14,rep,name=child_stops,json=childStops,proto3" json:"child_stops,omitempty"`
	ServiceMaps   []*ServiceMapForStop `protobuf:"bytes,8,rep,name=service_maps,json=serviceMaps,proto3" json:"service_maps,omitempty"`
	Alerts        []*AlertPreview      `protobuf:"bytes,15,rep,name=alerts,proto3" json:"alerts,omitempty"`
	StopTimes     []*Stop_StopTime     `protobuf:"bytes,6,rep,name=stop_times,json=stopTimes,proto3" json:"stop_times,omitempty"`
	Transfers     []*TransferAtStop    `protobuf:"bytes,16,rep,name=transfers,proto3" json:"transfers,omitempty"`
}

func (x *Stop) Reset() {
	*x = Stop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stop) ProtoMessage() {}

func (x *Stop) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stop.ProtoReflect.Descriptor instead.
func (*Stop) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{25}
}

func (x *Stop) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Stop) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Stop) GetLongitude() float64 {
	if x != nil && x.Longitude != nil {
		return *x.Longitude
	}
	return 0
}

func (x *Stop) GetLatitude() float64 {
	if x != nil && x.Latitude != nil {
		return *x.Latitude
	}
	return 0
}

func (x *Stop) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *Stop) GetStopHeadsigns() []string {
	if x != nil {
		return x.StopHeadsigns
	}
	return nil
}

func (x *Stop) GetParentStop() *RelatedStop {
	if x != nil {
		return x.ParentStop
	}
	return nil
}

func (x *Stop) GetChildStops() []*RelatedStop {
	if x != nil {
		return x.ChildStops
	}
	return nil
}

func (x *Stop) GetServiceMaps() []*ServiceMapForStop {
	if x != nil {
		return x.ServiceMaps
	}
	return nil
}

func (x *Stop) GetAlerts() []*AlertPreview {
	if x != nil {
		return x.Alerts
	}
	return nil
}

func (x *Stop) GetStopTimes() []*Stop_StopTime {
	if x != nil {
		return x.StopTimes
	}
	return nil
}

func (x *Stop) GetTransfers() []*TransferAtStop {
	if x != nil {
		return x.Transfers
	}
	return nil
}

type RelatedStop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ParentStop  *RelatedStop         `protobuf:"bytes,3,opt,name=parent_stop,json=parentStop,proto3,oneof" json:"parent_stop,omitempty"`
	ChildStops  []*RelatedStop       `protobuf:"bytes,4,rep,name=child_stops,json=childStops,proto3" json:"child_stops,omitempty"`
	ServiceMaps []*ServiceMapForStop `protobuf:"bytes,5,rep,name=service_maps,json=serviceMaps,proto3" json:"service_maps,omitempty"`
	Href        *string              `protobuf:"bytes,9,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *RelatedStop) Reset() {
	*x = RelatedStop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelatedStop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelatedStop) ProtoMessage() {}

func (x *RelatedStop) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelatedStop.ProtoReflect.Descriptor instead.
func (*RelatedStop) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{26}
}

func (x *RelatedStop) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RelatedStop) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RelatedStop) GetParentStop() *RelatedStop {
	if x != nil {
		return x.ParentStop
	}
	return nil
}

func (x *RelatedStop) GetChildStops() []*RelatedStop {
	if x != nil {
		return x.ChildStops
	}
	return nil
}

func (x *RelatedStop) GetServiceMaps() []*ServiceMapForStop {
	if x != nil {
		return x.ServiceMaps
	}
	return nil
}

func (x *RelatedStop) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

type TransferAtStop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromStop *StopPreview `protobuf:"bytes,1,opt,name=from_stop,json=fromStop,proto3" json:"from_stop,omitempty"`
	ToStop   *RelatedStop `protobuf:"bytes,2,opt,name=to_stop,json=toStop,proto3" json:"to_stop,omitempty"`
	// TODO: make this an enum
	Type            string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	MinTransferTime *int32 `protobuf:"varint,4,opt,name=min_transfer_time,json=minTransferTime,proto3,oneof" json:"min_transfer_time,omitempty"`
	Distance        *int32 `protobuf:"varint,5,opt,name=distance,proto3,oneof" json:"distance,omitempty"`
}

func (x *TransferAtStop) Reset() {
	*x = TransferAtStop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferAtStop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferAtStop) ProtoMessage() {}

func (x *TransferAtStop) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferAtStop.ProtoReflect.Descriptor instead.
func (*TransferAtStop) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{27}
}

func (x *TransferAtStop) GetFromStop() *StopPreview {
	if x != nil {
		return x.FromStop
	}
	return nil
}

func (x *TransferAtStop) GetToStop() *RelatedStop {
	if x != nil {
		return x.ToStop
	}
	return nil
}

func (x *TransferAtStop) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TransferAtStop) GetMinTransferTime() int32 {
	if x != nil && x.MinTransferTime != nil {
		return *x.MinTransferTime
	}
	return 0
}

func (x *TransferAtStop) GetDistance() int32 {
	if x != nil && x.Distance != nil {
		return *x.Distance
	}
	return 0
}

type StopPreview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Href *string `protobuf:"bytes,7,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *StopPreview) Reset() {
	*x = StopPreview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopPreview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopPreview) ProtoMessage() {}

func (x *StopPreview) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopPreview.ProtoReflect.Descriptor instead.
func (*StopPreview) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{28}
}

func (x *StopPreview) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StopPreview) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StopPreview) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

type TripPreview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Route       *RoutePreview   `protobuf:"bytes,2,opt,name=route,proto3" json:"route,omitempty"`
	LastStop    *StopPreview    `protobuf:"bytes,3,opt,name=last_stop,json=lastStop,proto3" json:"last_stop,omitempty"`
	StartedAt   *int64          `protobuf:"varint,10,opt,name=started_at,json=startedAt,proto3,oneof" json:"started_at,omitempty"`
	Vehicle     *VehiclePreview `protobuf:"bytes,6,opt,name=vehicle,proto3,oneof" json:"vehicle,omitempty"`
	DirectionId bool            `protobuf:"varint,4,opt,name=direction_id,json=directionId,proto3" json:"direction_id,omitempty"`
	Href        *string         `protobuf:"bytes,5,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *TripPreview) Reset() {
	*x = TripPreview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TripPreview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TripPreview) ProtoMessage() {}

func (x *TripPreview) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TripPreview.ProtoReflect.Descriptor instead.
func (*TripPreview) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{29}
}

func (x *TripPreview) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TripPreview) GetRoute() *RoutePreview {
	if x != nil {
		return x.Route
	}
	return nil
}

func (x *TripPreview) GetLastStop() *StopPreview {
	if x != nil {
		return x.LastStop
	}
	return nil
}

func (x *TripPreview) GetStartedAt() int64 {
	if x != nil && x.StartedAt != nil {
		return *x.StartedAt
	}
	return 0
}

func (x *TripPreview) GetVehicle() *VehiclePreview {
	if x != nil {
		return x.Vehicle
	}
	return nil
}

func (x *TripPreview) GetDirectionId() bool {
	if x != nil {
		return x.DirectionId
	}
	return false
}

func (x *TripPreview) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

// TODO(APIv2): remove and just return TripPreview
type TripPreviewWithAlerts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Route       *RoutePreview   `protobuf:"bytes,2,opt,name=route,proto3" json:"route,omitempty"`
	LastStop    *StopPreview    `protobuf:"bytes,3,opt,name=last_stop,json=lastStop,proto3" json:"last_stop,omitempty"`
	StartedAt   *int64          `protobuf:"varint,10,opt,name=started_at,json=startedAt,proto3,oneof" json:"started_at,omitempty"`
	Vehicle     *VehiclePreview `protobuf:"bytes,6,opt,name=vehicle,proto3,oneof" json:"vehicle,omitempty"`
	DirectionId bool            `protobuf:"varint,4,opt,name=direction_id,json=directionId,proto3" json:"direction_id,omitempty"`
	Href        *string         `protobuf:"bytes,5,opt,name=href,proto3,oneof" json:"href,omitempty"`
	Alerts      []*AlertPreview `protobuf:"bytes,20,rep,name=alerts,proto3" json:"alerts,omitempty"`
}

func (x *TripPreviewWithAlerts) Reset() {
	*x = TripPreviewWithAlerts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TripPreviewWithAlerts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TripPreviewWithAlerts) ProtoMessage() {}

func (x *TripPreviewWithAlerts) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TripPreviewWithAlerts.ProtoReflect.Descriptor instead.
func (*TripPreviewWithAlerts) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{30}
}

func (x *TripPreviewWithAlerts) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TripPreviewWithAlerts) GetRoute() *RoutePreview {
	if x != nil {
		return x.Route
	}
	return nil
}

func (x *TripPreviewWithAlerts) GetLastStop() *StopPreview {
	if x != nil {
		return x.LastStop
	}
	return nil
}

func (x *TripPreviewWithAlerts) GetStartedAt() int64 {
	if x != nil && x.StartedAt != nil {
		return *x.StartedAt
	}
	return 0
}

func (x *TripPreviewWithAlerts) GetVehicle() *VehiclePreview {
	if x != nil {
		return x.Vehicle
	}
	return nil
}

func (x *TripPreviewWithAlerts) GetDirectionId() bool {
	if x != nil {
		return x.DirectionId
	}
	return false
}

func (x *TripPreviewWithAlerts) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

func (x *TripPreviewWithAlerts) GetAlerts() []*AlertPreview {
	if x != nil {
		return x.Alerts
	}
	return nil
}

type Trip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// TODO(APIv2): remove route
	Route       *RoutePreview    `protobuf:"bytes,2,opt,name=route,proto3" json:"route,omitempty"`
	LastStop    *StopPreview     `protobuf:"bytes,3,opt,name=last_stop,json=lastStop,proto3" json:"last_stop,omitempty"`
	StartedAt   *int64           `protobuf:"varint,4,opt,name=started_at,json=startedAt,proto3,oneof" json:"started_at,omitempty"`
	Vehicle     *VehiclePreview  `protobuf:"bytes,6,opt,name=vehicle,proto3,oneof" json:"vehicle,omitempty"`
	DirectionId bool             `protobuf:"varint,7,opt,name=direction_id,json=directionId,proto3" json:"direction_id,omitempty"`
	StopTimes   []*Trip_StopTime `protobuf:"bytes,9,rep,name=stop_times,json=stopTimes,proto3" json:"stop_times,omitempty"`
	Href        *string          `protobuf:"bytes,10,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *Trip) Reset() {
	*x = Trip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trip) ProtoMessage() {}

func (x *Trip) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trip.ProtoReflect.Descriptor instead.
func (*Trip) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{31}
}

func (x *Trip) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Trip) GetRoute() *RoutePreview {
	if x != nil {
		return x.Route
	}
	return nil
}

func (x *Trip) GetLastStop() *StopPreview {
	if x != nil {
		return x.LastStop
	}
	return nil
}

func (x *Trip) GetStartedAt() int64 {
	if x != nil && x.StartedAt != nil {
		return *x.StartedAt
	}
	return 0
}

func (x *Trip) GetVehicle() *VehiclePreview {
	if x != nil {
		return x.Vehicle
	}
	return nil
}

func (x *Trip) GetDirectionId() bool {
	if x != nil {
		return x.DirectionId
	}
	return false
}

func (x *Trip) GetStopTimes() []*Trip_StopTime {
	if x != nil {
		return x.StopTimes
	}
	return nil
}

func (x *Trip) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

type VehiclePreview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *VehiclePreview) Reset() {
	*x = VehiclePreview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehiclePreview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclePreview) ProtoMessage() {}

func (x *VehiclePreview) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehiclePreview.ProtoReflect.Descriptor instead.
func (*VehiclePreview) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{32}
}

func (x *VehiclePreview) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RoutePreview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// TODO(APIv2): remove?
	Color string `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	// Will be populated only if the system is not obvious
	System *System `protobuf:"bytes,8,opt,name=system,proto3,oneof" json:"system,omitempty"`
	Href   *string `protobuf:"bytes,3,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *RoutePreview) Reset() {
	*x = RoutePreview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutePreview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutePreview) ProtoMessage() {}

func (x *RoutePreview) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutePreview.ProtoReflect.Descriptor instead.
func (*RoutePreview) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{33}
}

func (x *RoutePreview) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoutePreview) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *RoutePreview) GetSystem() *System {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *RoutePreview) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

type RoutePreviewWithAlerts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// TODO(APIv2): remove?
	Color  string          `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	Alerts []*AlertPreview `protobuf:"bytes,3,rep,name=alerts,proto3" json:"alerts,omitempty"`
	Href   *string         `protobuf:"bytes,4,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *RoutePreviewWithAlerts) Reset() {
	*x = RoutePreviewWithAlerts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutePreviewWithAlerts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutePreviewWithAlerts) ProtoMessage() {}

func (x *RoutePreviewWithAlerts) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutePreviewWithAlerts.ProtoReflect.Descriptor instead.
func (*RoutePreviewWithAlerts) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{34}
}

func (x *RoutePreviewWithAlerts) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoutePreviewWithAlerts) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *RoutePreviewWithAlerts) GetAlerts() []*AlertPreview {
	if x != nil {
		return x.Alerts
	}
	return nil
}

func (x *RoutePreviewWithAlerts) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

type Route struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ShortName   *string `protobuf:"bytes,2,opt,name=short_name,json=shortName,proto3,oneof" json:"short_name,omitempty"`
	LongName    *string `protobuf:"bytes,3,opt,name=long_name,json=longName,proto3,oneof" json:"long_name,omitempty"`
	Color       string  `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	TextColor   string  `protobuf:"bytes,5,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	Description *string `protobuf:"bytes,6,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Url         *string `protobuf:"bytes,7,opt,name=url,proto3,oneof" json:"url,omitempty"`
	SortOrder   *int32  `protobuf:"varint,13,opt,name=sort_order,json=sortOrder,proto3,oneof" json:"sort_order,omitempty"`
	// TODO: make these enums
	ContinuousPickup  string `protobuf:"bytes,14,opt,name=continuous_pickup,json=continuousPickup,proto3" json:"continuous_pickup,omitempty"`
	ContinuousDropOff string `protobuf:"bytes,15,opt,name=continuous_drop_off,json=continuousDropOff,proto3" json:"continuous_drop_off,omitempty"`
	// TODO: make this an enum
	Type string `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`
	// TODO(APIv2): make this integer seconds
	Periodicity *float64              `protobuf:"fixed64,9,opt,name=periodicity,proto3,oneof" json:"periodicity,omitempty"`
	Agency      *AgencyPreview        `protobuf:"bytes,10,opt,name=agency,proto3" json:"agency,omitempty"`
	ServiceMaps []*ServiceMapForRoute `protobuf:"bytes,11,rep,name=service_maps,json=serviceMaps,proto3" json:"service_maps,omitempty"`
	Alerts      []*Alert              `protobuf:"bytes,12,rep,name=alerts,proto3" json:"alerts,omitempty"`
}

func (x *Route) Reset() {
	*x = Route{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{35}
}

func (x *Route) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Route) GetShortName() string {
	if x != nil && x.ShortName != nil {
		return *x.ShortName
	}
	return ""
}

func (x *Route) GetLongName() string {
	if x != nil && x.LongName != nil {
		return *x.LongName
	}
	return ""
}

func (x *Route) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Route) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *Route) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Route) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *Route) GetSortOrder() int32 {
	if x != nil && x.SortOrder != nil {
		return *x.SortOrder
	}
	return 0
}

func (x *Route) GetContinuousPickup() string {
	if x != nil {
		return x.ContinuousPickup
	}
	return ""
}

func (x *Route) GetContinuousDropOff() string {
	if x != nil {
		return x.ContinuousDropOff
	}
	return ""
}

func (x *Route) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Route) GetPeriodicity() float64 {
	if x != nil && x.Periodicity != nil {
		return *x.Periodicity
	}
	return 0
}

func (x *Route) GetAgency() *AgencyPreview {
	if x != nil {
		return x.Agency
	}
	return nil
}

func (x *Route) GetServiceMaps() []*ServiceMapForRoute {
	if x != nil {
		return x.ServiceMaps
	}
	return nil
}

func (x *Route) GetAlerts() []*Alert {
	if x != nil {
		return x.Alerts
	}
	return nil
}

type Feed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PeriodicUpdateEnabled bool          `protobuf:"varint,2,opt,name=periodic_update_enabled,json=periodicUpdateEnabled,proto3" json:"periodic_update_enabled,omitempty"`
	PeriodicUpdatePeriod  *string       `protobuf:"bytes,3,opt,name=periodic_update_period,json=periodicUpdatePeriod,proto3,oneof" json:"periodic_update_period,omitempty"`
	Updates               *Feed_Updates `protobuf:"bytes,4,opt,name=updates,proto3,oneof" json:"updates,omitempty"`
}

func (x *Feed) Reset() {
	*x = Feed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Feed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feed) ProtoMessage() {}

func (x *Feed) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feed.ProtoReflect.Descriptor instead.
func (*Feed) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{36}
}

func (x *Feed) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Feed) GetPeriodicUpdateEnabled() bool {
	if x != nil {
		return x.PeriodicUpdateEnabled
	}
	return false
}

func (x *Feed) GetPeriodicUpdatePeriod() string {
	if x != nil && x.PeriodicUpdatePeriod != nil {
		return *x.PeriodicUpdatePeriod
	}
	return ""
}

func (x *Feed) GetUpdates() *Feed_Updates {
	if x != nil {
		return x.Updates
	}
	return nil
}

type FeedPreview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PeriodicUpdateEnabled bool    `protobuf:"varint,2,opt,name=periodic_update_enabled,json=periodicUpdateEnabled,proto3" json:"periodic_update_enabled,omitempty"`
	PeriodicUpdatePeriod  *string `protobuf:"bytes,3,opt,name=periodic_update_period,json=periodicUpdatePeriod,proto3,oneof" json:"periodic_update_period,omitempty"`
	Href                  *string `protobuf:"bytes,4,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *FeedPreview) Reset() {
	*x = FeedPreview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedPreview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedPreview) ProtoMessage() {}

func (x *FeedPreview) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedPreview.ProtoReflect.Descriptor instead.
func (*FeedPreview) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{37}
}

func (x *FeedPreview) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FeedPreview) GetPeriodicUpdateEnabled() bool {
	if x != nil {
		return x.PeriodicUpdateEnabled
	}
	return false
}

func (x *FeedPreview) GetPeriodicUpdatePeriod() string {
	if x != nil && x.PeriodicUpdatePeriod != nil {
		return *x.PeriodicUpdatePeriod
	}
	return ""
}

func (x *FeedPreview) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

type Agency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Url      string          `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Timezone string          `protobuf:"bytes,4,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Language *string         `protobuf:"bytes,5,opt,name=language,proto3,oneof" json:"language,omitempty"`
	Phone    *string         `protobuf:"bytes,6,opt,name=phone,proto3,oneof" json:"phone,omitempty"`
	FareUrl  *string         `protobuf:"bytes,7,opt,name=fare_url,json=fareUrl,proto3,oneof" json:"fare_url,omitempty"`
	Email    *string         `protobuf:"bytes,8,opt,name=email,proto3,oneof" json:"email,omitempty"`
	Routes   []*RoutePreview `protobuf:"bytes,9,rep,name=routes,proto3" json:"routes,omitempty"`
	Alerts   []*AlertPreview `protobuf:"bytes,10,rep,name=alerts,proto3" json:"alerts,omitempty"`
}

func (x *Agency) Reset() {
	*x = Agency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Agency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agency) ProtoMessage() {}

func (x *Agency) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agency.ProtoReflect.Descriptor instead.
func (*Agency) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{38}
}

func (x *Agency) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Agency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Agency) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Agency) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *Agency) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *Agency) GetPhone() string {
	if x != nil && x.Phone != nil {
		return *x.Phone
	}
	return ""
}

func (x *Agency) GetFareUrl() string {
	if x != nil && x.FareUrl != nil {
		return *x.FareUrl
	}
	return ""
}

func (x *Agency) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *Agency) GetRoutes() []*RoutePreview {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *Agency) GetAlerts() []*AlertPreview {
	if x != nil {
		return x.Alerts
	}
	return nil
}

// TODO(APIv2): delete this message and replace with AgencyPreview?
type AgencyPreviewWithAlerts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Alerts []*AlertPreview `protobuf:"bytes,4,rep,name=alerts,proto3" json:"alerts,omitempty"`
	Href   *string         `protobuf:"bytes,3,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *AgencyPreviewWithAlerts) Reset() {
	*x = AgencyPreviewWithAlerts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgencyPreviewWithAlerts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgencyPreviewWithAlerts) ProtoMessage() {}

func (x *AgencyPreviewWithAlerts) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgencyPreviewWithAlerts.ProtoReflect.Descriptor instead.
func (*AgencyPreviewWithAlerts) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{39}
}

func (x *AgencyPreviewWithAlerts) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgencyPreviewWithAlerts) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AgencyPreviewWithAlerts) GetAlerts() []*AlertPreview {
	if x != nil {
		return x.Alerts
	}
	return nil
}

func (x *AgencyPreviewWithAlerts) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

type AgencyPreview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Href *string `protobuf:"bytes,3,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *AgencyPreview) Reset() {
	*x = AgencyPreview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgencyPreview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgencyPreview) ProtoMessage() {}

func (x *AgencyPreview) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgencyPreview.ProtoReflect.Descriptor instead.
func (*AgencyPreview) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{40}
}

func (x *AgencyPreview) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgencyPreview) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AgencyPreview) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

type AlertPreview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// TODO: make this an enum
	Cause string `protobuf:"bytes,2,opt,name=cause,proto3" json:"cause,omitempty"`
	// TODO: make this an enum
	Effect string `protobuf:"bytes,3,opt,name=effect,proto3" json:"effect,omitempty"`
}

func (x *AlertPreview) Reset() {
	*x = AlertPreview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertPreview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertPreview) ProtoMessage() {}

func (x *AlertPreview) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertPreview.ProtoReflect.Descriptor instead.
func (*AlertPreview) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{41}
}

func (x *AlertPreview) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AlertPreview) GetCause() string {
	if x != nil {
		return x.Cause
	}
	return ""
}

func (x *AlertPreview) GetEffect() string {
	if x != nil {
		return x.Effect
	}
	return ""
}

type Alert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// TODO: make this an enum
	Cause string `protobuf:"bytes,2,opt,name=cause,proto3" json:"cause,omitempty"`
	// TODO: make this an enum
	Effect       string              `protobuf:"bytes,3,opt,name=effect,proto3" json:"effect,omitempty"`
	ActivePeriod *Alert_ActivePeriod `protobuf:"bytes,4,opt,name=active_period,json=activePeriod,proto3" json:"active_period,omitempty"`
	Header       []*AlertText        `protobuf:"bytes,5,rep,name=header,proto3" json:"header,omitempty"`
	Description  []*AlertText        `protobuf:"bytes,6,rep,name=description,proto3" json:"description,omitempty"`
	Url          []*AlertText        `protobuf:"bytes,7,rep,name=url,proto3" json:"url,omitempty"`
}

func (x *Alert) Reset() {
	*x = Alert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert) ProtoMessage() {}

func (x *Alert) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert.ProtoReflect.Descriptor instead.
func (*Alert) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{42}
}

func (x *Alert) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Alert) GetCause() string {
	if x != nil {
		return x.Cause
	}
	return ""
}

func (x *Alert) GetEffect() string {
	if x != nil {
		return x.Effect
	}
	return ""
}

func (x *Alert) GetActivePeriod() *Alert_ActivePeriod {
	if x != nil {
		return x.ActivePeriod
	}
	return nil
}

func (x *Alert) GetHeader() []*AlertText {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Alert) GetDescription() []*AlertText {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Alert) GetUrl() []*AlertText {
	if x != nil {
		return x.Url
	}
	return nil
}

type AlertText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text     string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Language string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *AlertText) Reset() {
	*x = AlertText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertText) ProtoMessage() {}

func (x *AlertText) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertText.ProtoReflect.Descriptor instead.
func (*AlertText) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{43}
}

func (x *AlertText) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *AlertText) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type EstimatedTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time        *int64 `protobuf:"varint,1,opt,name=time,proto3,oneof" json:"time,omitempty"`
	Delay       *int32 `protobuf:"varint,2,opt,name=delay,proto3,oneof" json:"delay,omitempty"`
	Uncertainty *int32 `protobuf:"varint,3,opt,name=uncertainty,proto3,oneof" json:"uncertainty,omitempty"`
}

func (x *EstimatedTime) Reset() {
	*x = EstimatedTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimatedTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimatedTime) ProtoMessage() {}

func (x *EstimatedTime) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimatedTime.ProtoReflect.Descriptor instead.
func (*EstimatedTime) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{44}
}

func (x *EstimatedTime) GetTime() int64 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *EstimatedTime) GetDelay() int32 {
	if x != nil && x.Delay != nil {
		return *x.Delay
	}
	return 0
}

func (x *EstimatedTime) GetUncertainty() int32 {
	if x != nil && x.Uncertainty != nil {
		return *x.Uncertainty
	}
	return 0
}

type ServiceMapForStop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigId string          `protobuf:"bytes,1,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	Routes   []*RoutePreview `protobuf:"bytes,2,rep,name=routes,proto3" json:"routes,omitempty"`
}

func (x *ServiceMapForStop) Reset() {
	*x = ServiceMapForStop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMapForStop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMapForStop) ProtoMessage() {}

func (x *ServiceMapForStop) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMapForStop.ProtoReflect.Descriptor instead.
func (*ServiceMapForStop) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{45}
}

func (x *ServiceMapForStop) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *ServiceMapForStop) GetRoutes() []*RoutePreview {
	if x != nil {
		return x.Routes
	}
	return nil
}

type ServiceMapForRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigId string         `protobuf:"bytes,1,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	Stops    []*StopPreview `protobuf:"bytes,2,rep,name=stops,proto3" json:"stops,omitempty"`
}

func (x *ServiceMapForRoute) Reset() {
	*x = ServiceMapForRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMapForRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMapForRoute) ProtoMessage() {}

func (x *ServiceMapForRoute) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMapForRoute.ProtoReflect.Descriptor instead.
func (*ServiceMapForRoute) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{46}
}

func (x *ServiceMapForRoute) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *ServiceMapForRoute) GetStops() []*StopPreview {
	if x != nil {
		return x.Stops
	}
	return nil
}

type CountAndHref struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Href  *string `protobuf:"bytes,2,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *CountAndHref) Reset() {
	*x = CountAndHref{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAndHref) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAndHref) ProtoMessage() {}

func (x *CountAndHref) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAndHref.ProtoReflect.Descriptor instead.
func (*CountAndHref) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{47}
}

func (x *CountAndHref) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CountAndHref) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

type Transfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromStop *StopPreview `protobuf:"bytes,1,opt,name=from_stop,json=fromStop,proto3" json:"from_stop,omitempty"`
	ToStop   *StopPreview `protobuf:"bytes,2,opt,name=to_stop,json=toStop,proto3" json:"to_stop,omitempty"`
	// TODO: make this an enum
	Type            string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	MinTransferTime int32  `protobuf:"varint,4,opt,name=min_transfer_time,json=minTransferTime,proto3" json:"min_transfer_time,omitempty"`
	Distance        *int32 `protobuf:"varint,5,opt,name=distance,proto3,oneof" json:"distance,omitempty"`
}

func (x *Transfer) Reset() {
	*x = Transfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transfer) ProtoMessage() {}

func (x *Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transfer.ProtoReflect.Descriptor instead.
func (*Transfer) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{48}
}

func (x *Transfer) GetFromStop() *StopPreview {
	if x != nil {
		return x.FromStop
	}
	return nil
}

func (x *Transfer) GetToStop() *StopPreview {
	if x != nil {
		return x.ToStop
	}
	return nil
}

func (x *Transfer) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Transfer) GetMinTransferTime() int32 {
	if x != nil {
		return x.MinTransferTime
	}
	return 0
}

func (x *Transfer) GetDistance() int32 {
	if x != nil && x.Distance != nil {
		return *x.Distance
	}
	return 0
}

type FeedUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// TODO: make these enums
	Type          string  `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Status        string  `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Result        *string `protobuf:"bytes,4,opt,name=result,proto3,oneof" json:"result,omitempty"`
	StackTrace    *string `protobuf:"bytes,5,opt,name=stack_trace,json=stackTrace,proto3,oneof" json:"stack_trace,omitempty"`
	ContentHash   *string `protobuf:"bytes,6,opt,name=content_hash,json=contentHash,proto3,oneof" json:"content_hash,omitempty"`
	ContentLength *int32  `protobuf:"varint,7,opt,name=content_length,json=contentLength,proto3,oneof" json:"content_length,omitempty"`
	CompletedAt   *int64  `protobuf:"varint,8,opt,name=completed_at,json=completedAt,proto3,oneof" json:"completed_at,omitempty"`
}

func (x *FeedUpdate) Reset() {
	*x = FeedUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedUpdate) ProtoMessage() {}

func (x *FeedUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedUpdate.ProtoReflect.Descriptor instead.
func (*FeedUpdate) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{49}
}

func (x *FeedUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FeedUpdate) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FeedUpdate) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FeedUpdate) GetResult() string {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return ""
}

func (x *FeedUpdate) GetStackTrace() string {
	if x != nil && x.StackTrace != nil {
		return *x.StackTrace
	}
	return ""
}

func (x *FeedUpdate) GetContentHash() string {
	if x != nil && x.ContentHash != nil {
		return *x.ContentHash
	}
	return ""
}

func (x *FeedUpdate) GetContentLength() int32 {
	if x != nil && x.ContentLength != nil {
		return *x.ContentLength
	}
	return 0
}

func (x *FeedUpdate) GetCompletedAt() int64 {
	if x != nil && x.CompletedAt != nil {
		return *x.CompletedAt
	}
	return 0
}

type EntrypointReply_TransiterDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string                                  `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Href    string                                  `protobuf:"bytes,2,opt,name=href,proto3" json:"href,omitempty"`
	Build   *EntrypointReply_TransiterDetails_Build `protobuf:"bytes,3,opt,name=build,proto3,oneof" json:"build,omitempty"`
}

func (x *EntrypointReply_TransiterDetails) Reset() {
	*x = EntrypointReply_TransiterDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntrypointReply_TransiterDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntrypointReply_TransiterDetails) ProtoMessage() {}

func (x *EntrypointReply_TransiterDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntrypointReply_TransiterDetails.ProtoReflect.Descriptor instead.
func (*EntrypointReply_TransiterDetails) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{1, 0}
}

func (x *EntrypointReply_TransiterDetails) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *EntrypointReply_TransiterDetails) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

func (x *EntrypointReply_TransiterDetails) GetBuild() *EntrypointReply_TransiterDetails_Build {
	if x != nil {
		return x.Build
	}
	return nil
}

type EntrypointReply_TransiterDetails_Build struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number           string `protobuf:"bytes,3,opt,name=number,proto3" json:"number,omitempty"`
	BuiltAt          string `protobuf:"bytes,4,opt,name=built_at,json=builtAt,proto3" json:"built_at,omitempty"`
	BuiltAtTimestamp string `protobuf:"bytes,5,opt,name=built_at_timestamp,json=builtAtTimestamp,proto3" json:"built_at_timestamp,omitempty"`
	GitCommitHash    string `protobuf:"bytes,6,opt,name=git_commit_hash,json=gitCommitHash,proto3" json:"git_commit_hash,omitempty"`
	Href             string `protobuf:"bytes,7,opt,name=href,proto3" json:"href,omitempty"`
}

func (x *EntrypointReply_TransiterDetails_Build) Reset() {
	*x = EntrypointReply_TransiterDetails_Build{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntrypointReply_TransiterDetails_Build) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntrypointReply_TransiterDetails_Build) ProtoMessage() {}

func (x *EntrypointReply_TransiterDetails_Build) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntrypointReply_TransiterDetails_Build.ProtoReflect.Descriptor instead.
func (*EntrypointReply_TransiterDetails_Build) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *EntrypointReply_TransiterDetails_Build) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *EntrypointReply_TransiterDetails_Build) GetBuiltAt() string {
	if x != nil {
		return x.BuiltAt
	}
	return ""
}

func (x *EntrypointReply_TransiterDetails_Build) GetBuiltAtTimestamp() string {
	if x != nil {
		return x.BuiltAtTimestamp
	}
	return ""
}

func (x *EntrypointReply_TransiterDetails_Build) GetGitCommitHash() string {
	if x != nil {
		return x.GitCommitHash
	}
	return ""
}

func (x *EntrypointReply_TransiterDetails_Build) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

type Stop_StopTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arrival      *EstimatedTime `protobuf:"bytes,1,opt,name=arrival,proto3" json:"arrival,omitempty"`
	Departure    *EstimatedTime `protobuf:"bytes,2,opt,name=departure,proto3" json:"departure,omitempty"`
	Future       bool           `protobuf:"varint,4,opt,name=future,proto3" json:"future,omitempty"`
	StopSequence int32          `protobuf:"varint,5,opt,name=stop_sequence,json=stopSequence,proto3" json:"stop_sequence,omitempty"`
	Headsign     *string        `protobuf:"bytes,6,opt,name=headsign,proto3,oneof" json:"headsign,omitempty"`
	Track        *string        `protobuf:"bytes,3,opt,name=track,proto3,oneof" json:"track,omitempty"`
	Trip         *TripPreview   `protobuf:"bytes,7,opt,name=trip,proto3" json:"trip,omitempty"`
}

func (x *Stop_StopTime) Reset() {
	*x = Stop_StopTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stop_StopTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stop_StopTime) ProtoMessage() {}

func (x *Stop_StopTime) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stop_StopTime.ProtoReflect.Descriptor instead.
func (*Stop_StopTime) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{25, 0}
}

func (x *Stop_StopTime) GetArrival() *EstimatedTime {
	if x != nil {
		return x.Arrival
	}
	return nil
}

func (x *Stop_StopTime) GetDeparture() *EstimatedTime {
	if x != nil {
		return x.Departure
	}
	return nil
}

func (x *Stop_StopTime) GetFuture() bool {
	if x != nil {
		return x.Future
	}
	return false
}

func (x *Stop_StopTime) GetStopSequence() int32 {
	if x != nil {
		return x.StopSequence
	}
	return 0
}

func (x *Stop_StopTime) GetHeadsign() string {
	if x != nil && x.Headsign != nil {
		return *x.Headsign
	}
	return ""
}

func (x *Stop_StopTime) GetTrack() string {
	if x != nil && x.Track != nil {
		return *x.Track
	}
	return ""
}

func (x *Stop_StopTime) GetTrip() *TripPreview {
	if x != nil {
		return x.Trip
	}
	return nil
}

type Trip_StopTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arrival      *EstimatedTime `protobuf:"bytes,1,opt,name=arrival,proto3" json:"arrival,omitempty"`
	Departure    *EstimatedTime `protobuf:"bytes,2,opt,name=departure,proto3" json:"departure,omitempty"`
	Future       bool           `protobuf:"varint,4,opt,name=future,proto3" json:"future,omitempty"`
	StopSequence int32          `protobuf:"varint,5,opt,name=stop_sequence,json=stopSequence,proto3" json:"stop_sequence,omitempty"`
	Headsign     *string        `protobuf:"bytes,6,opt,name=headsign,proto3,oneof" json:"headsign,omitempty"`
	Track        *string        `protobuf:"bytes,3,opt,name=track,proto3,oneof" json:"track,omitempty"`
	Stop         *StopPreview   `protobuf:"bytes,7,opt,name=stop,proto3" json:"stop,omitempty"`
}

func (x *Trip_StopTime) Reset() {
	*x = Trip_StopTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trip_StopTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trip_StopTime) ProtoMessage() {}

func (x *Trip_StopTime) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trip_StopTime.ProtoReflect.Descriptor instead.
func (*Trip_StopTime) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{31, 0}
}

func (x *Trip_StopTime) GetArrival() *EstimatedTime {
	if x != nil {
		return x.Arrival
	}
	return nil
}

func (x *Trip_StopTime) GetDeparture() *EstimatedTime {
	if x != nil {
		return x.Departure
	}
	return nil
}

func (x *Trip_StopTime) GetFuture() bool {
	if x != nil {
		return x.Future
	}
	return false
}

func (x *Trip_StopTime) GetStopSequence() int32 {
	if x != nil {
		return x.StopSequence
	}
	return 0
}

func (x *Trip_StopTime) GetHeadsign() string {
	if x != nil && x.Headsign != nil {
		return *x.Headsign
	}
	return ""
}

func (x *Trip_StopTime) GetTrack() string {
	if x != nil && x.Track != nil {
		return *x.Track
	}
	return ""
}

func (x *Trip_StopTime) GetStop() *StopPreview {
	if x != nil {
		return x.Stop
	}
	return nil
}

type Feed_Updates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Href *string `protobuf:"bytes,1,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *Feed_Updates) Reset() {
	*x = Feed_Updates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Feed_Updates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feed_Updates) ProtoMessage() {}

func (x *Feed_Updates) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feed_Updates.ProtoReflect.Descriptor instead.
func (*Feed_Updates) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{36, 0}
}

func (x *Feed_Updates) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

type Alert_ActivePeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartsAt *int64 `protobuf:"varint,1,opt,name=starts_at,json=startsAt,proto3,oneof" json:"starts_at,omitempty"`
	EndsAt   *int64 `protobuf:"varint,2,opt,name=ends_at,json=endsAt,proto3,oneof" json:"ends_at,omitempty"`
}

func (x *Alert_ActivePeriod) Reset() {
	*x = Alert_ActivePeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert_ActivePeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert_ActivePeriod) ProtoMessage() {}

func (x *Alert_ActivePeriod) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert_ActivePeriod.ProtoReflect.Descriptor instead.
func (*Alert_ActivePeriod) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{42, 0}
}

func (x *Alert_ActivePeriod) GetStartsAt() int64 {
	if x != nil && x.StartsAt != nil {
		return *x.StartsAt
	}
	return 0
}

func (x *Alert_ActivePeriod) GetEndsAt() int64 {
	if x != nil && x.EndsAt != nil {
		return *x.EndsAt
	}
	return 0
}

var File_api_public_proto protoreflect.FileDescriptor

var file_api_public_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x13, 0x0a, 0x11, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb3, 0x03, 0x0a, 0x0f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3f, 0x0a, 0x09, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x07, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x48, 0x72, 0x65, 0x66, 0x52, 0x07, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x73, 0x1a, 0xb5, 0x02, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x12, 0x42, 0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x48, 0x00,
	0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x88, 0x01, 0x01, 0x1a, 0xa4, 0x01, 0x0a, 0x05, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x62, 0x75, 0x69, 0x6c, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x75, 0x69, 0x6c, 0x74, 0x41, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x75, 0x69, 0x6c, 0x74,
	0x5f, 0x61, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x41, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x67, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x72, 0x65,
	0x66, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x35, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x21, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52,
	0x07, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x2f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x1b, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x34, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x57, 0x69, 0x74, 0x68, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x08,
	0x61, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x22, 0x54, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41,
	0x67, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x64, 0x22, 0x37,
	0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x73, 0x49, 0x6e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x74, 0x6f, 0x70, 0x73, 0x49, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x05,
	0x73, 0x74, 0x6f, 0x70, 0x73, 0x22, 0x4e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x70,
	0x49, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x74, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x6f, 0x70, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x49, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22,
	0x4a, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x49, 0x6e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x57, 0x69, 0x74, 0x68, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x22, 0x51, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x22, 0x51,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x69, 0x70, 0x73, 0x49, 0x6e, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x49,
	0x64, 0x22, 0x45, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x69, 0x70, 0x73, 0x49, 0x6e,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x74, 0x72,
	0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x54, 0x72, 0x69, 0x70,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x57, 0x69, 0x74, 0x68, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x52, 0x05, 0x74, 0x72, 0x69, 0x70, 0x73, 0x22, 0x61, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x18, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x73, 0x49, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64,
	0x73, 0x49, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x22,
	0x0a, 0x05, 0x66, 0x65, 0x65, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x46, 0x65, 0x65, 0x64, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x05, 0x66, 0x65, 0x65,
	0x64, 0x73, 0x22, 0x4e, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x65, 0x65,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64,
	0x49, 0x64, 0x22, 0x3d, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x46, 0x65,
	0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x22, 0x4e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x49, 0x6e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49,
	0x64, 0x22, 0x3b, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x73, 0x49, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x45,
	0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x49,
	0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x09,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x73, 0x22, 0x88, 0x04, 0x0a, 0x06, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x08,
	0x61, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x48, 0x72, 0x65, 0x66, 0x48, 0x00, 0x52,
	0x08, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x05,
	0x66, 0x65, 0x65, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x48, 0x72, 0x65, 0x66, 0x48, 0x01, 0x52, 0x05, 0x66, 0x65,
	0x65, 0x64, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6e,
	0x64, 0x48, 0x72, 0x65, 0x66, 0x48, 0x02, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x48, 0x72, 0x65, 0x66,
	0x48, 0x03, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x09,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x48, 0x72, 0x65, 0x66, 0x48, 0x04,
	0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x12, 0x17,
	0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x04,
	0x68, 0x72, 0x65, 0x66, 0x88, 0x01, 0x01, 0x22, 0x74, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e,
	0x53, 0x54, 0x41, 0x4c, 0x4c, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0c,
	0x0a, 0x08, 0x55, 0x50, 0x44, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x12,
	0x0c, 0x0a, 0x08, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x66,
	0x65, 0x65, 0x64, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x72, 0x65, 0x66,
	0x22, 0xa3, 0x06, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a,
	0x0e, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x73, 0x69, 0x67, 0x6e, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x70, 0x48, 0x65, 0x61, 0x64, 0x73,
	0x69, 0x67, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x6f, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x70, 0x48, 0x04, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x6f, 0x70, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0b, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x0a, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x53, 0x74, 0x6f, 0x70, 0x73, 0x12, 0x35, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x6f,
	0x70, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x12, 0x25,
	0x0a, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x06, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x41, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x73, 0x1a, 0x94, 0x02, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x07, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x07, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x09, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x75, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x73, 0x69, 0x67,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x73,
	0x69, 0x67, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x04, 0x74, 0x72, 0x69, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x04, 0x74,
	0x72, 0x69, 0x70, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x73, 0x69, 0x67, 0x6e,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x22, 0xfd, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x70, 0x48, 0x00, 0x52,
	0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x88, 0x01, 0x01, 0x12, 0x2d,
	0x0a, 0x0b, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x6f,
	0x70, 0x52, 0x0a, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x6f, 0x70, 0x73, 0x12, 0x35, 0x0a,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x70,
	0x46, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4d, 0x61, 0x70, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x68, 0x72, 0x65, 0x66, 0x22, 0xeb, 0x01, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x41, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x29, 0x0a, 0x09, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53,
	0x74, 0x6f, 0x70, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d,
	0x53, 0x74, 0x6f, 0x70, 0x12, 0x25, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53,
	0x74, 0x6f, 0x70, 0x52, 0x06, 0x74, 0x6f, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x2f, 0x0a, 0x11, 0x6d, 0x69, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x69,
	0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1f, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x22, 0x53, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x72, 0x65, 0x66, 0x22, 0xa1, 0x02, 0x0a, 0x0b, 0x54, 0x72,
	0x69, 0x70, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x29,
	0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a,
	0x07, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x48,
	0x01, 0x52, 0x07, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x72, 0x65, 0x66, 0x22, 0xd2, 0x02,
	0x0a, 0x15, 0x54, 0x72, 0x69, 0x70, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x57, 0x69, 0x74,
	0x68, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x09,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x07, 0x76,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x48, 0x01, 0x52,
	0x07, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04,
	0x68, 0x72, 0x65, 0x66, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x72,
	0x65, 0x66, 0x22, 0xe0, 0x04, 0x0a, 0x04, 0x54, 0x72, 0x69, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x12, 0x29, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x22, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x2e, 0x0a, 0x07, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x48, 0x01, 0x52, 0x07, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x2e, 0x53, 0x74,
	0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x88, 0x01, 0x01, 0x1a, 0x94, 0x02, 0x0a, 0x08, 0x53,
	0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x61, 0x72, 0x72, 0x69, 0x76,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61,
	0x6c, 0x12, 0x2c, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x70, 0x5f,
	0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x73, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x08,
	0x68, 0x65, 0x61, 0x64, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x73, 0x69, 0x67, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
	0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x04, 0x73, 0x74, 0x6f, 0x70,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x68,
	0x65, 0x61, 0x64, 0x73, 0x69, 0x67, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x68, 0x72, 0x65, 0x66, 0x22, 0x20, 0x0a, 0x0e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x0c, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24,
	0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x72, 0x65,
	0x66, 0x22, 0x87, 0x01, 0x0a, 0x16, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x50, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x57, 0x69, 0x74, 0x68, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x25, 0x0a, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x72, 0x65,
	0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x88,
	0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x72, 0x65, 0x66, 0x22, 0xe0, 0x04, 0x0a, 0x05,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08,
	0x6c, 0x6f, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x04, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88,
	0x01, 0x01, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73,
	0x5f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63,
	0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12,
	0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x5f, 0x64, 0x72,
	0x6f, 0x70, 0x5f, 0x6f, 0x66, 0x66, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x4f, 0x66, 0x66, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x48, 0x05, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x69, 0x63, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x06, 0x61, 0x67,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x67, 0x65,
	0x6e, 0x63, 0x79, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x06, 0x61, 0x67, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x36, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61,
	0x70, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x61, 0x70, 0x46, 0x6f, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x12, 0x1e, 0x0a, 0x06, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x52, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x6f,
	0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x75, 0x72, 0x6c, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x69, 0x74, 0x79, 0x22, 0x8b,
	0x02, 0x0a, 0x04, 0x46, 0x65, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x69, 0x63, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x69, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x39, 0x0a, 0x16, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x14, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x65,
	0x65, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x48, 0x01, 0x52, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x88, 0x01, 0x01, 0x1a, 0x2b, 0x0a, 0x07, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x68, 0x72, 0x65, 0x66, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x69, 0x63, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0xcd, 0x01, 0x0a,
	0x0b, 0x46, 0x65, 0x65, 0x64, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x17,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x16, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x14, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x17, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x04, 0x68, 0x72, 0x65, 0x66, 0x88, 0x01, 0x01, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x69, 0x63, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x72, 0x65, 0x66, 0x22, 0xcd, 0x02, 0x0a,
	0x06, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x66, 0x61, 0x72, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x66, 0x61, 0x72, 0x65, 0x55,
	0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x25, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66, 0x61, 0x72, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x86, 0x01, 0x0a,
	0x17, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x57, 0x69,
	0x74, 0x68, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x06,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x06, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x68, 0x72, 0x65, 0x66, 0x22, 0x55, 0x0a, 0x0d, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x72,
	0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66,
	0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x72, 0x65, 0x66, 0x22, 0x4c, 0x0a, 0x0c,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x75,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x22, 0xd9, 0x02, 0x0a, 0x05, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x12, 0x38, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x0c,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x54, 0x65, 0x78, 0x74, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x2c, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x54, 0x65, 0x78, 0x74, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0x68, 0x0a, 0x0c,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x20, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x00, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1c,
	0x0a, 0x07, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x01, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x73, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x61, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65,
	0x6e, 0x64, 0x73, 0x5f, 0x61, 0x74, 0x22, 0x3b, 0x0a, 0x09, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x0d, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19,
	0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52,
	0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x75, 0x6e, 0x63,
	0x65, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02,
	0x52, 0x0b, 0x75, 0x6e, 0x63, 0x65, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x74, 0x79, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x64, 0x65,
	0x6c, 0x61, 0x79, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x75, 0x6e, 0x63, 0x65, 0x72, 0x74, 0x61, 0x69,
	0x6e, 0x74, 0x79, 0x22, 0x57, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61,
	0x70, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x22, 0x55, 0x0a, 0x12,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x46, 0x6f, 0x72, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x05, 0x73, 0x74,
	0x6f, 0x70, 0x73, 0x22, 0x46, 0x0a, 0x0c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x48,
	0x72, 0x65, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x72, 0x65,
	0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x88,
	0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x72, 0x65, 0x66, 0x22, 0xca, 0x01, 0x0a, 0x08,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x74,
	0x6f, 0x70, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x53,
	0x74, 0x6f, 0x70, 0x12, 0x25, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x06, 0x74, 0x6f, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x6d, 0x69, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6d, 0x69, 0x6e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x64, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08,
	0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xd7, 0x02, 0x0a, 0x0a, 0x46, 0x65, 0x65,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x24, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2a,
	0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x04, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88,
	0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x32, 0x84, 0x0c, 0x0a, 0x06, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x3d, 0x0a,
	0x0a, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x2e, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x09, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x03, 0x12, 0x01, 0x2f, 0x12, 0x47, 0x0a, 0x0b,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x13, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x11, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x2f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x45, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x12, 0x11, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0x1c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73,
	0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x77, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x49, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65,
	0x73, 0x49, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73,
	0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x67, 0x65,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x6a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e,
	0x63, 0x79, 0x49, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x31,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x12, 0x29, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73,
	0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x67, 0x65,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x69, 0x64,
	0x7d, 0x12, 0x6b, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x73, 0x49, 0x6e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f,
	0x70, 0x73, 0x49, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x73, 0x49, 0x6e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x12, 0x5f,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x49, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x12, 0x17, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x49, 0x6e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x05, 0x2e, 0x53, 0x74, 0x6f,
	0x70, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x73, 0x74, 0x6f, 0x70, 0x73, 0x2f, 0x7b, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x12,
	0x6f, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x49, 0x6e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x49, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x49, 0x6e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x64, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49,
	0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x06,
	0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26,
	0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x7a, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72,
	0x69, 0x70, 0x73, 0x49, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x72, 0x69, 0x70, 0x73, 0x49, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x69, 0x70, 0x73,
	0x49, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x34, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2e, 0x12, 0x2c, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x2f, 0x7b, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x72, 0x69,
	0x70, 0x73, 0x12, 0x61, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x72, 0x69, 0x70, 0x12, 0x0f, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x05,
	0x2e, 0x54, 0x72, 0x69, 0x70, 0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x38, 0x12, 0x36, 0x2f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x72, 0x69, 0x70, 0x73, 0x2f, 0x7b, 0x74, 0x72, 0x69,
	0x70, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x6b, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65,
	0x64, 0x73, 0x49, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x46, 0x65, 0x65, 0x64, 0x73, 0x49, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64,
	0x73, 0x49, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73,
	0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x66, 0x65, 0x65,
	0x64, 0x73, 0x12, 0x5f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x49, 0x6e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x49,
	0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x05,
	0x2e, 0x46, 0x65, 0x65, 0x64, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x73, 0x2f, 0x7b, 0x66, 0x65, 0x65, 0x64, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0x77, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x17, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x12, 0x2c,
	0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x73, 0x2f, 0x7b, 0x66, 0x65, 0x65, 0x64,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x7b, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x66, 0x65,
	0x6e, 0x6e, 0x65, 0x6c, 0x6c, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x72, 0x2f,
	0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_public_proto_rawDescOnce sync.Once
	file_api_public_proto_rawDescData = file_api_public_proto_rawDesc
)

func file_api_public_proto_rawDescGZIP() []byte {
	file_api_public_proto_rawDescOnce.Do(func() {
		file_api_public_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_public_proto_rawDescData)
	})
	return file_api_public_proto_rawDescData
}

var file_api_public_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_public_proto_msgTypes = make([]protoimpl.MessageInfo, 56)
var file_api_public_proto_goTypes = []interface{}{
	(System_Status)(0),                             // 0: System.Status
	(*EntrypointRequest)(nil),                      // 1: EntrypointRequest
	(*EntrypointReply)(nil),                        // 2: EntrypointReply
	(*ListSystemsRequest)(nil),                     // 3: ListSystemsRequest
	(*ListSystemsReply)(nil),                       // 4: ListSystemsReply
	(*GetSystemRequest)(nil),                       // 5: GetSystemRequest
	(*ListAgenciesInSystemRequest)(nil),            // 6: ListAgenciesInSystemRequest
	(*ListAgenciesInSystemReply)(nil),              // 7: ListAgenciesInSystemReply
	(*GetAgencyInSystemRequest)(nil),               // 8: GetAgencyInSystemRequest
	(*ListStopsInSystemRequest)(nil),               // 9: ListStopsInSystemRequest
	(*ListStopsInSystemReply)(nil),                 // 10: ListStopsInSystemReply
	(*GetStopInSystemRequest)(nil),                 // 11: GetStopInSystemRequest
	(*ListRoutesInSystemRequest)(nil),              // 12: ListRoutesInSystemRequest
	(*ListRoutesInSystemReply)(nil),                // 13: ListRoutesInSystemReply
	(*GetRouteInSystemRequest)(nil),                // 14: GetRouteInSystemRequest
	(*ListTripsInRouteRequest)(nil),                // 15: ListTripsInRouteRequest
	(*ListTripsInRouteReply)(nil),                  // 16: ListTripsInRouteReply
	(*GetTripRequest)(nil),                         // 17: GetTripRequest
	(*ListFeedsInSystemRequest)(nil),               // 18: ListFeedsInSystemRequest
	(*ListFeedsInSystemReply)(nil),                 // 19: ListFeedsInSystemReply
	(*ListFeedUpdatesRequest)(nil),                 // 20: ListFeedUpdatesRequest
	(*ListFeedUpdatesReply)(nil),                   // 21: ListFeedUpdatesReply
	(*GetFeedInSystemRequest)(nil),                 // 22: GetFeedInSystemRequest
	(*ListTransfersInSystemRequest)(nil),           // 23: ListTransfersInSystemRequest
	(*ListTransfersInSystemReply)(nil),             // 24: ListTransfersInSystemReply
	(*System)(nil),                                 // 25: System
	(*Stop)(nil),                                   // 26: Stop
	(*RelatedStop)(nil),                            // 27: RelatedStop
	(*TransferAtStop)(nil),                         // 28: TransferAtStop
	(*StopPreview)(nil),                            // 29: StopPreview
	(*TripPreview)(nil),                            // 30: TripPreview
	(*TripPreviewWithAlerts)(nil),                  // 31: TripPreviewWithAlerts
	(*Trip)(nil),                                   // 32: Trip
	(*VehiclePreview)(nil),                         // 33: VehiclePreview
	(*RoutePreview)(nil),                           // 34: RoutePreview
	(*RoutePreviewWithAlerts)(nil),                 // 35: RoutePreviewWithAlerts
	(*Route)(nil),                                  // 36: Route
	(*Feed)(nil),                                   // 37: Feed
	(*FeedPreview)(nil),                            // 38: FeedPreview
	(*Agency)(nil),                                 // 39: Agency
	(*AgencyPreviewWithAlerts)(nil),                // 40: AgencyPreviewWithAlerts
	(*AgencyPreview)(nil),                          // 41: AgencyPreview
	(*AlertPreview)(nil),                           // 42: AlertPreview
	(*Alert)(nil),                                  // 43: Alert
	(*AlertText)(nil),                              // 44: AlertText
	(*EstimatedTime)(nil),                          // 45: EstimatedTime
	(*ServiceMapForStop)(nil),                      // 46: ServiceMapForStop
	(*ServiceMapForRoute)(nil),                     // 47: ServiceMapForRoute
	(*CountAndHref)(nil),                           // 48: CountAndHref
	(*Transfer)(nil),                               // 49: Transfer
	(*FeedUpdate)(nil),                             // 50: FeedUpdate
	(*EntrypointReply_TransiterDetails)(nil),       // 51: EntrypointReply.TransiterDetails
	(*EntrypointReply_TransiterDetails_Build)(nil), // 52: EntrypointReply.TransiterDetails.Build
	(*Stop_StopTime)(nil),                          // 53: Stop.StopTime
	(*Trip_StopTime)(nil),                          // 54: Trip.StopTime
	(*Feed_Updates)(nil),                           // 55: Feed.Updates
	(*Alert_ActivePeriod)(nil),                     // 56: Alert.ActivePeriod
}
var file_api_public_proto_depIdxs = []int32{
	51, // 0: EntrypointReply.transiter:type_name -> EntrypointReply.TransiterDetails
	48, // 1: EntrypointReply.systems:type_name -> CountAndHref
	25, // 2: ListSystemsReply.systems:type_name -> System
	40, // 3: ListAgenciesInSystemReply.agencies:type_name -> AgencyPreviewWithAlerts
	29, // 4: ListStopsInSystemReply.stops:type_name -> StopPreview
	35, // 5: ListRoutesInSystemReply.routes:type_name -> RoutePreviewWithAlerts
	31, // 6: ListTripsInRouteReply.trips:type_name -> TripPreviewWithAlerts
	38, // 7: ListFeedsInSystemReply.feeds:type_name -> FeedPreview
	50, // 8: ListFeedUpdatesReply.updates:type_name -> FeedUpdate
	49, // 9: ListTransfersInSystemReply.transfers:type_name -> Transfer
	0,  // 10: System.status:type_name -> System.Status
	48, // 11: System.agencies:type_name -> CountAndHref
	48, // 12: System.feeds:type_name -> CountAndHref
	48, // 13: System.routes:type_name -> CountAndHref
	48, // 14: System.stops:type_name -> CountAndHref
	48, // 15: System.transfers:type_name -> CountAndHref
	27, // 16: Stop.parent_stop:type_name -> RelatedStop
	27, // 17: Stop.child_stops:type_name -> RelatedStop
	46, // 18: Stop.service_maps:type_name -> ServiceMapForStop
	42, // 19: Stop.alerts:type_name -> AlertPreview
	53, // 20: Stop.stop_times:type_name -> Stop.StopTime
	28, // 21: Stop.transfers:type_name -> TransferAtStop
	27, // 22: RelatedStop.parent_stop:type_name -> RelatedStop
	27, // 23: RelatedStop.child_stops:type_name -> RelatedStop
	46, // 24: RelatedStop.service_maps:type_name -> ServiceMapForStop
	29, // 25: TransferAtStop.from_stop:type_name -> StopPreview
	27, // 26: TransferAtStop.to_stop:type_name -> RelatedStop
	34, // 27: TripPreview.route:type_name -> RoutePreview
	29, // 28: TripPreview.last_stop:type_name -> StopPreview
	33, // 29: TripPreview.vehicle:type_name -> VehiclePreview
	34, // 30: TripPreviewWithAlerts.route:type_name -> RoutePreview
	29, // 31: TripPreviewWithAlerts.last_stop:type_name -> StopPreview
	33, // 32: TripPreviewWithAlerts.vehicle:type_name -> VehiclePreview
	42, // 33: TripPreviewWithAlerts.alerts:type_name -> AlertPreview
	34, // 34: Trip.route:type_name -> RoutePreview
	29, // 35: Trip.last_stop:type_name -> StopPreview
	33, // 36: Trip.vehicle:type_name -> VehiclePreview
	54, // 37: Trip.stop_times:type_name -> Trip.StopTime
	25, // 38: RoutePreview.system:type_name -> System
	42, // 39: RoutePreviewWithAlerts.alerts:type_name -> AlertPreview
	41, // 40: Route.agency:type_name -> AgencyPreview
	47, // 41: Route.service_maps:type_name -> ServiceMapForRoute
	43, // 42: Route.alerts:type_name -> Alert
	55, // 43: Feed.updates:type_name -> Feed.Updates
	34, // 44: Agency.routes:type_name -> RoutePreview
	42, // 45: Agency.alerts:type_name -> AlertPreview
	42, // 46: AgencyPreviewWithAlerts.alerts:type_name -> AlertPreview
	56, // 47: Alert.active_period:type_name -> Alert.ActivePeriod
	44, // 48: Alert.header:type_name -> AlertText
	44, // 49: Alert.description:type_name -> AlertText
	44, // 50: Alert.url:type_name -> AlertText
	34, // 51: ServiceMapForStop.routes:type_name -> RoutePreview
	29, // 52: ServiceMapForRoute.stops:type_name -> StopPreview
	29, // 53: Transfer.from_stop:type_name -> StopPreview
	29, // 54: Transfer.to_stop:type_name -> StopPreview
	52, // 55: EntrypointReply.TransiterDetails.build:type_name -> EntrypointReply.TransiterDetails.Build
	45, // 56: Stop.StopTime.arrival:type_name -> EstimatedTime
	45, // 57: Stop.StopTime.departure:type_name -> EstimatedTime
	30, // 58: Stop.StopTime.trip:type_name -> TripPreview
	45, // 59: Trip.StopTime.arrival:type_name -> EstimatedTime
	45, // 60: Trip.StopTime.departure:type_name -> EstimatedTime
	29, // 61: Trip.StopTime.stop:type_name -> StopPreview
	1,  // 62: Public.Entrypoint:input_type -> EntrypointRequest
	3,  // 63: Public.ListSystems:input_type -> ListSystemsRequest
	5,  // 64: Public.GetSystem:input_type -> GetSystemRequest
	6,  // 65: Public.ListAgenciesInSystem:input_type -> ListAgenciesInSystemRequest
	8,  // 66: Public.GetAgencyInSystem:input_type -> GetAgencyInSystemRequest
	9,  // 67: Public.ListStopsInSystem:input_type -> ListStopsInSystemRequest
	11, // 68: Public.GetStopInSystem:input_type -> GetStopInSystemRequest
	12, // 69: Public.ListRoutesInSystem:input_type -> ListRoutesInSystemRequest
	14, // 70: Public.GetRouteInSystem:input_type -> GetRouteInSystemRequest
	15, // 71: Public.ListTripsInRoute:input_type -> ListTripsInRouteRequest
	17, // 72: Public.GetTrip:input_type -> GetTripRequest
	18, // 73: Public.ListFeedsInSystem:input_type -> ListFeedsInSystemRequest
	22, // 74: Public.GetFeedInSystem:input_type -> GetFeedInSystemRequest
	20, // 75: Public.ListFeedUpdates:input_type -> ListFeedUpdatesRequest
	23, // 76: Public.ListTransfersInSystem:input_type -> ListTransfersInSystemRequest
	2,  // 77: Public.Entrypoint:output_type -> EntrypointReply
	4,  // 78: Public.ListSystems:output_type -> ListSystemsReply
	25, // 79: Public.GetSystem:output_type -> System
	7,  // 80: Public.ListAgenciesInSystem:output_type -> ListAgenciesInSystemReply
	39, // 81: Public.GetAgencyInSystem:output_type -> Agency
	10, // 82: Public.ListStopsInSystem:output_type -> ListStopsInSystemReply
	26, // 83: Public.GetStopInSystem:output_type -> Stop
	13, // 84: Public.ListRoutesInSystem:output_type -> ListRoutesInSystemReply
	36, // 85: Public.GetRouteInSystem:output_type -> Route
	16, // 86: Public.ListTripsInRoute:output_type -> ListTripsInRouteReply
	32, // 87: Public.GetTrip:output_type -> Trip
	19, // 88: Public.ListFeedsInSystem:output_type -> ListFeedsInSystemReply
	37, // 89: Public.GetFeedInSystem:output_type -> Feed
	21, // 90: Public.ListFeedUpdates:output_type -> ListFeedUpdatesReply
	24, // 91: Public.ListTransfersInSystem:output_type -> ListTransfersInSystemReply
	77, // [77:92] is the sub-list for method output_type
	62, // [62:77] is the sub-list for method input_type
	62, // [62:62] is the sub-list for extension type_name
	62, // [62:62] is the sub-list for extension extendee
	0,  // [0:62] is the sub-list for field type_name
}

func init() { file_api_public_proto_init() }
func file_api_public_proto_init() {
	if File_api_public_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_public_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntrypointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntrypointReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSystemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSystemsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAgenciesInSystemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAgenciesInSystemReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAgencyInSystemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStopsInSystemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStopsInSystemReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStopInSystemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoutesInSystemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoutesInSystemReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRouteInSystemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTripsInRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTripsInRouteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTripRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeedsInSystemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeedsInSystemReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeedUpdatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeedUpdatesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeedInSystemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTransfersInSystemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTransfersInSystemReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*System); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelatedStop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferAtStop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopPreview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TripPreview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TripPreviewWithAlerts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehiclePreview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutePreview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutePreviewWithAlerts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Route); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Feed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedPreview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Agency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgencyPreviewWithAlerts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgencyPreview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertPreview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimatedTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMapForStop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMapForRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountAndHref); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntrypointReply_TransiterDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntrypointReply_TransiterDetails_Build); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stop_StopTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trip_StopTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Feed_Updates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alert_ActivePeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_public_proto_msgTypes[24].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[25].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[26].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[27].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[28].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[29].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[30].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[31].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[33].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[34].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[35].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[36].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[37].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[38].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[39].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[40].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[44].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[47].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[48].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[49].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[50].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[52].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[53].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[54].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[55].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_public_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   56,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_public_proto_goTypes,
		DependencyIndexes: file_api_public_proto_depIdxs,
		EnumInfos:         file_api_public_proto_enumTypes,
		MessageInfos:      file_api_public_proto_msgTypes,
	}.Build()
	File_api_public_proto = out.File
	file_api_public_proto_rawDesc = nil
	file_api_public_proto_goTypes = nil
	file_api_public_proto_depIdxs = nil
}
