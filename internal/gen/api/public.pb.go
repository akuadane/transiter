// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.18.1
// source: api/public.proto

package api

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type System_Status int32

const (
	System_UNKNOWN        System_Status = 0
	System_INSTALLING     System_Status = 1
	System_ACTIVE         System_Status = 2
	System_INSTALL_FAILED System_Status = 3
	System_UPDATING       System_Status = 4
	System_UPDATE_FAILED  System_Status = 5
	System_DELETING       System_Status = 6
)

// Enum value maps for System_Status.
var (
	System_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "INSTALLING",
		2: "ACTIVE",
		3: "INSTALL_FAILED",
		4: "UPDATING",
		5: "UPDATE_FAILED",
		6: "DELETING",
	}
	System_Status_value = map[string]int32{
		"UNKNOWN":        0,
		"INSTALLING":     1,
		"ACTIVE":         2,
		"INSTALL_FAILED": 3,
		"UPDATING":       4,
		"UPDATE_FAILED":  5,
		"DELETING":       6,
	}
)

func (x System_Status) Enum() *System_Status {
	p := new(System_Status)
	*p = x
	return p
}

func (x System_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (System_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_api_public_proto_enumTypes[0].Descriptor()
}

func (System_Status) Type() protoreflect.EnumType {
	return &file_api_public_proto_enumTypes[0]
}

func (x System_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use System_Status.Descriptor instead.
func (System_Status) EnumDescriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{27, 0}
}

// Cause is the same as the alert cause in the GTFS realtime spec, except UNKNOWN_CAUSE has
// value 0 to satisfy proto3 requirements.
type Alert_Cause int32

const (
	Alert_UNKNOWN_CAUSE     Alert_Cause = 0
	Alert_OTHER_CAUSE       Alert_Cause = 2
	Alert_TECHNICAL_PROBLEM Alert_Cause = 3
	Alert_STRIKE            Alert_Cause = 4
	Alert_DEMONSTRATION     Alert_Cause = 5
	Alert_ACCIDENT          Alert_Cause = 6
	Alert_HOLIDAY           Alert_Cause = 7
	Alert_WEATHER           Alert_Cause = 8
	Alert_MAINTENANCE       Alert_Cause = 9
	Alert_CONSTRUCTION      Alert_Cause = 10
	Alert_POLICE_ACTIVITY   Alert_Cause = 11
	Alert_MEDICAL_EMERGENCY Alert_Cause = 12
)

// Enum value maps for Alert_Cause.
var (
	Alert_Cause_name = map[int32]string{
		0:  "UNKNOWN_CAUSE",
		2:  "OTHER_CAUSE",
		3:  "TECHNICAL_PROBLEM",
		4:  "STRIKE",
		5:  "DEMONSTRATION",
		6:  "ACCIDENT",
		7:  "HOLIDAY",
		8:  "WEATHER",
		9:  "MAINTENANCE",
		10: "CONSTRUCTION",
		11: "POLICE_ACTIVITY",
		12: "MEDICAL_EMERGENCY",
	}
	Alert_Cause_value = map[string]int32{
		"UNKNOWN_CAUSE":     0,
		"OTHER_CAUSE":       2,
		"TECHNICAL_PROBLEM": 3,
		"STRIKE":            4,
		"DEMONSTRATION":     5,
		"ACCIDENT":          6,
		"HOLIDAY":           7,
		"WEATHER":           8,
		"MAINTENANCE":       9,
		"CONSTRUCTION":      10,
		"POLICE_ACTIVITY":   11,
		"MEDICAL_EMERGENCY": 12,
	}
)

func (x Alert_Cause) Enum() *Alert_Cause {
	p := new(Alert_Cause)
	*p = x
	return p
}

func (x Alert_Cause) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Alert_Cause) Descriptor() protoreflect.EnumDescriptor {
	return file_api_public_proto_enumTypes[1].Descriptor()
}

func (Alert_Cause) Type() protoreflect.EnumType {
	return &file_api_public_proto_enumTypes[1]
}

func (x Alert_Cause) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Alert_Cause.Descriptor instead.
func (Alert_Cause) EnumDescriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{34, 0}
}

// Effect is the same as the alert effect in the GTFS realtime spec, except UNKNOWN_EFFECT has
// value 0 to satisfy proto3 requirements.
type Alert_Effect int32

const (
	Alert_UNKNOWN_EFFECT      Alert_Effect = 0
	Alert_NO_SERVICE          Alert_Effect = 1
	Alert_REDUCED_SERVICE     Alert_Effect = 2
	Alert_SIGNIFICANT_DELAYS  Alert_Effect = 3
	Alert_DETOUR              Alert_Effect = 4
	Alert_ADDITIONAL_SERVICE  Alert_Effect = 5
	Alert_MODIFIED_SERVICE    Alert_Effect = 6
	Alert_OTHER_EFFECT        Alert_Effect = 7
	Alert_STOP_MOVED          Alert_Effect = 9
	Alert_NO_EFFECT           Alert_Effect = 10
	Alert_ACCESSIBILITY_ISSUE Alert_Effect = 11
)

// Enum value maps for Alert_Effect.
var (
	Alert_Effect_name = map[int32]string{
		0:  "UNKNOWN_EFFECT",
		1:  "NO_SERVICE",
		2:  "REDUCED_SERVICE",
		3:  "SIGNIFICANT_DELAYS",
		4:  "DETOUR",
		5:  "ADDITIONAL_SERVICE",
		6:  "MODIFIED_SERVICE",
		7:  "OTHER_EFFECT",
		9:  "STOP_MOVED",
		10: "NO_EFFECT",
		11: "ACCESSIBILITY_ISSUE",
	}
	Alert_Effect_value = map[string]int32{
		"UNKNOWN_EFFECT":      0,
		"NO_SERVICE":          1,
		"REDUCED_SERVICE":     2,
		"SIGNIFICANT_DELAYS":  3,
		"DETOUR":              4,
		"ADDITIONAL_SERVICE":  5,
		"MODIFIED_SERVICE":    6,
		"OTHER_EFFECT":        7,
		"STOP_MOVED":          9,
		"NO_EFFECT":           10,
		"ACCESSIBILITY_ISSUE": 11,
	}
)

func (x Alert_Effect) Enum() *Alert_Effect {
	p := new(Alert_Effect)
	*p = x
	return p
}

func (x Alert_Effect) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Alert_Effect) Descriptor() protoreflect.EnumDescriptor {
	return file_api_public_proto_enumTypes[2].Descriptor()
}

func (Alert_Effect) Type() protoreflect.EnumType {
	return &file_api_public_proto_enumTypes[2]
}

func (x Alert_Effect) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Alert_Effect.Descriptor instead.
func (Alert_Effect) EnumDescriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{34, 1}
}

type Transfer_Type int32

const (
	Transfer_RECOMMENDED   Transfer_Type = 0
	Transfer_TIMED         Transfer_Type = 1
	Transfer_REQUIRES_TIME Transfer_Type = 2
	Transfer_NO_POSSIBLE   Transfer_Type = 3
)

// Enum value maps for Transfer_Type.
var (
	Transfer_Type_name = map[int32]string{
		0: "RECOMMENDED",
		1: "TIMED",
		2: "REQUIRES_TIME",
		3: "NO_POSSIBLE",
	}
	Transfer_Type_value = map[string]int32{
		"RECOMMENDED":   0,
		"TIMED":         1,
		"REQUIRES_TIME": 2,
		"NO_POSSIBLE":   3,
	}
)

func (x Transfer_Type) Enum() *Transfer_Type {
	p := new(Transfer_Type)
	*p = x
	return p
}

func (x Transfer_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Transfer_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_public_proto_enumTypes[3].Descriptor()
}

func (Transfer_Type) Type() protoreflect.EnumType {
	return &file_api_public_proto_enumTypes[3]
}

func (x Transfer_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Transfer_Type.Descriptor instead.
func (Transfer_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{36, 0}
}

type EntrypointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EntrypointRequest) Reset() {
	*x = EntrypointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntrypointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntrypointRequest) ProtoMessage() {}

func (x *EntrypointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntrypointRequest.ProtoReflect.Descriptor instead.
func (*EntrypointRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{0}
}

type EntrypointReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transiter *EntrypointReply_TransiterDetails `protobuf:"bytes,1,opt,name=transiter,proto3" json:"transiter,omitempty"`
	Systems   []*System_Preview                 `protobuf:"bytes,2,rep,name=systems,proto3" json:"systems,omitempty"`
}

func (x *EntrypointReply) Reset() {
	*x = EntrypointReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntrypointReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntrypointReply) ProtoMessage() {}

func (x *EntrypointReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntrypointReply.ProtoReflect.Descriptor instead.
func (*EntrypointReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{1}
}

func (x *EntrypointReply) GetTransiter() *EntrypointReply_TransiterDetails {
	if x != nil {
		return x.Transiter
	}
	return nil
}

func (x *EntrypointReply) GetSystems() []*System_Preview {
	if x != nil {
		return x.Systems
	}
	return nil
}

type ListSystemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListSystemsRequest) Reset() {
	*x = ListSystemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSystemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemsRequest) ProtoMessage() {}

func (x *ListSystemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemsRequest.ProtoReflect.Descriptor instead.
func (*ListSystemsRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{2}
}

type ListSystemsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Systems []*System `protobuf:"bytes,1,rep,name=systems,proto3" json:"systems,omitempty"`
}

func (x *ListSystemsReply) Reset() {
	*x = ListSystemsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSystemsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemsReply) ProtoMessage() {}

func (x *ListSystemsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemsReply.ProtoReflect.Descriptor instead.
func (*ListSystemsReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{3}
}

func (x *ListSystemsReply) GetSystems() []*System {
	if x != nil {
		return x.Systems
	}
	return nil
}

type GetSystemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
}

func (x *GetSystemRequest) Reset() {
	*x = GetSystemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemRequest) ProtoMessage() {}

func (x *GetSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemRequest.ProtoReflect.Descriptor instead.
func (*GetSystemRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{4}
}

func (x *GetSystemRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

type ListAgenciesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
}

func (x *ListAgenciesRequest) Reset() {
	*x = ListAgenciesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgenciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgenciesRequest) ProtoMessage() {}

func (x *ListAgenciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgenciesRequest.ProtoReflect.Descriptor instead.
func (*ListAgenciesRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{5}
}

func (x *ListAgenciesRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

type ListAgenciesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agencies []*Agency `protobuf:"bytes,1,rep,name=agencies,proto3" json:"agencies,omitempty"`
}

func (x *ListAgenciesReply) Reset() {
	*x = ListAgenciesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgenciesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgenciesReply) ProtoMessage() {}

func (x *ListAgenciesReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgenciesReply.ProtoReflect.Descriptor instead.
func (*ListAgenciesReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{6}
}

func (x *ListAgenciesReply) GetAgencies() []*Agency {
	if x != nil {
		return x.Agencies
	}
	return nil
}

type GetAgencyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	AgencyId string `protobuf:"bytes,2,opt,name=agency_id,json=agencyId,proto3" json:"agency_id,omitempty"`
}

func (x *GetAgencyRequest) Reset() {
	*x = GetAgencyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgencyRequest) ProtoMessage() {}

func (x *GetAgencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgencyRequest.ProtoReflect.Descriptor instead.
func (*GetAgencyRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{7}
}

func (x *GetAgencyRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *GetAgencyRequest) GetAgencyId() string {
	if x != nil {
		return x.AgencyId
	}
	return ""
}

type ListStopsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
}

func (x *ListStopsRequest) Reset() {
	*x = ListStopsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStopsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStopsRequest) ProtoMessage() {}

func (x *ListStopsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStopsRequest.ProtoReflect.Descriptor instead.
func (*ListStopsRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{8}
}

func (x *ListStopsRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

type ListStopsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO: full Stop instead of preview
	Stops []*Stop_Preview `protobuf:"bytes,1,rep,name=stops,proto3" json:"stops,omitempty"`
}

func (x *ListStopsReply) Reset() {
	*x = ListStopsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStopsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStopsReply) ProtoMessage() {}

func (x *ListStopsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStopsReply.ProtoReflect.Descriptor instead.
func (*ListStopsReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{9}
}

func (x *ListStopsReply) GetStops() []*Stop_Preview {
	if x != nil {
		return x.Stops
	}
	return nil
}

type GetStopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	StopId   string `protobuf:"bytes,2,opt,name=stop_id,json=stopId,proto3" json:"stop_id,omitempty"`
}

func (x *GetStopRequest) Reset() {
	*x = GetStopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStopRequest) ProtoMessage() {}

func (x *GetStopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStopRequest.ProtoReflect.Descriptor instead.
func (*GetStopRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{10}
}

func (x *GetStopRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *GetStopRequest) GetStopId() string {
	if x != nil {
		return x.StopId
	}
	return ""
}

type ListRoutesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	// If true, the estimate headway field will not be populated.
	SkipEstimatedHeadways bool `protobuf:"varint,2,opt,name=skip_estimated_headways,json=skipEstimatedHeadways,proto3" json:"skip_estimated_headways,omitempty"`
	// If true, the service maps field will not be populated.
	SkipServiceMaps bool `protobuf:"varint,3,opt,name=skip_service_maps,json=skipServiceMaps,proto3" json:"skip_service_maps,omitempty"`
	// If true, the alerts field will not be populated.
	SkipAlerts bool `protobuf:"varint,4,opt,name=skip_alerts,json=skipAlerts,proto3" json:"skip_alerts,omitempty"`
}

func (x *ListRoutesRequest) Reset() {
	*x = ListRoutesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoutesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoutesRequest) ProtoMessage() {}

func (x *ListRoutesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoutesRequest.ProtoReflect.Descriptor instead.
func (*ListRoutesRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{11}
}

func (x *ListRoutesRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *ListRoutesRequest) GetSkipEstimatedHeadways() bool {
	if x != nil {
		return x.SkipEstimatedHeadways
	}
	return false
}

func (x *ListRoutesRequest) GetSkipServiceMaps() bool {
	if x != nil {
		return x.SkipServiceMaps
	}
	return false
}

func (x *ListRoutesRequest) GetSkipAlerts() bool {
	if x != nil {
		return x.SkipAlerts
	}
	return false
}

type ListRoutesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Routes []*Route `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
}

func (x *ListRoutesReply) Reset() {
	*x = ListRoutesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoutesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoutesReply) ProtoMessage() {}

func (x *ListRoutesReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoutesReply.ProtoReflect.Descriptor instead.
func (*ListRoutesReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{12}
}

func (x *ListRoutesReply) GetRoutes() []*Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

type GetRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	RouteId  string `protobuf:"bytes,2,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	// If true, the estimate headway field will not be populated.
	SkipEstimatedHeadways bool `protobuf:"varint,3,opt,name=skip_estimated_headways,json=skipEstimatedHeadways,proto3" json:"skip_estimated_headways,omitempty"`
	// If true, the service maps field will not be populated.
	SkipServiceMaps bool `protobuf:"varint,4,opt,name=skip_service_maps,json=skipServiceMaps,proto3" json:"skip_service_maps,omitempty"`
	// If true, the alerts field will not be populated.
	SkipAlerts bool `protobuf:"varint,5,opt,name=skip_alerts,json=skipAlerts,proto3" json:"skip_alerts,omitempty"`
}

func (x *GetRouteRequest) Reset() {
	*x = GetRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouteRequest) ProtoMessage() {}

func (x *GetRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouteRequest.ProtoReflect.Descriptor instead.
func (*GetRouteRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{13}
}

func (x *GetRouteRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *GetRouteRequest) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

func (x *GetRouteRequest) GetSkipEstimatedHeadways() bool {
	if x != nil {
		return x.SkipEstimatedHeadways
	}
	return false
}

func (x *GetRouteRequest) GetSkipServiceMaps() bool {
	if x != nil {
		return x.SkipServiceMaps
	}
	return false
}

func (x *GetRouteRequest) GetSkipAlerts() bool {
	if x != nil {
		return x.SkipAlerts
	}
	return false
}

type ListTripsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	RouteId  string `protobuf:"bytes,2,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
}

func (x *ListTripsRequest) Reset() {
	*x = ListTripsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTripsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTripsRequest) ProtoMessage() {}

func (x *ListTripsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTripsRequest.ProtoReflect.Descriptor instead.
func (*ListTripsRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{14}
}

func (x *ListTripsRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *ListTripsRequest) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

type ListTripsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO: full Trip instead of preview
	Trips []*Trip_Preview `protobuf:"bytes,1,rep,name=trips,proto3" json:"trips,omitempty"`
}

func (x *ListTripsReply) Reset() {
	*x = ListTripsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTripsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTripsReply) ProtoMessage() {}

func (x *ListTripsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTripsReply.ProtoReflect.Descriptor instead.
func (*ListTripsReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{15}
}

func (x *ListTripsReply) GetTrips() []*Trip_Preview {
	if x != nil {
		return x.Trips
	}
	return nil
}

type ListAlertsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	// If non-empty, only alerts with the provided IDs are returned.
	// This is interpreted as a filtering condition, so it is not an error to provide non-existent IDs.
	//
	// If empty, all alerts in the system are returned.
	AlertId []string `protobuf:"bytes,2,rep,name=alert_id,json=alertId,proto3" json:"alert_id,omitempty"`
}

func (x *ListAlertsRequest) Reset() {
	*x = ListAlertsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertsRequest) ProtoMessage() {}

func (x *ListAlertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertsRequest.ProtoReflect.Descriptor instead.
func (*ListAlertsRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{16}
}

func (x *ListAlertsRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *ListAlertsRequest) GetAlertId() []string {
	if x != nil {
		return x.AlertId
	}
	return nil
}

type ListAlertsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alerts []*Alert `protobuf:"bytes,1,rep,name=alerts,proto3" json:"alerts,omitempty"`
}

func (x *ListAlertsReply) Reset() {
	*x = ListAlertsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertsReply) ProtoMessage() {}

func (x *ListAlertsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertsReply.ProtoReflect.Descriptor instead.
func (*ListAlertsReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{17}
}

func (x *ListAlertsReply) GetAlerts() []*Alert {
	if x != nil {
		return x.Alerts
	}
	return nil
}

type GetAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	AlertId  string `protobuf:"bytes,2,opt,name=alert_id,json=alertId,proto3" json:"alert_id,omitempty"`
}

func (x *GetAlertRequest) Reset() {
	*x = GetAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertRequest) ProtoMessage() {}

func (x *GetAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertRequest.ProtoReflect.Descriptor instead.
func (*GetAlertRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{18}
}

func (x *GetAlertRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *GetAlertRequest) GetAlertId() string {
	if x != nil {
		return x.AlertId
	}
	return ""
}

type GetTripRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	RouteId  string `protobuf:"bytes,2,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	TripId   string `protobuf:"bytes,3,opt,name=trip_id,json=tripId,proto3" json:"trip_id,omitempty"`
}

func (x *GetTripRequest) Reset() {
	*x = GetTripRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTripRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTripRequest) ProtoMessage() {}

func (x *GetTripRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTripRequest.ProtoReflect.Descriptor instead.
func (*GetTripRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{19}
}

func (x *GetTripRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *GetTripRequest) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

func (x *GetTripRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

type ListFeedsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
}

func (x *ListFeedsRequest) Reset() {
	*x = ListFeedsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeedsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeedsRequest) ProtoMessage() {}

func (x *ListFeedsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeedsRequest.ProtoReflect.Descriptor instead.
func (*ListFeedsRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{20}
}

func (x *ListFeedsRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

type ListFeedsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO: full Feed instead of preview
	Feeds []*Feed_Preview `protobuf:"bytes,1,rep,name=feeds,proto3" json:"feeds,omitempty"`
}

func (x *ListFeedsReply) Reset() {
	*x = ListFeedsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeedsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeedsReply) ProtoMessage() {}

func (x *ListFeedsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeedsReply.ProtoReflect.Descriptor instead.
func (*ListFeedsReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{21}
}

func (x *ListFeedsReply) GetFeeds() []*Feed_Preview {
	if x != nil {
		return x.Feeds
	}
	return nil
}

type ListFeedUpdatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	FeedId   string `protobuf:"bytes,2,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
}

func (x *ListFeedUpdatesRequest) Reset() {
	*x = ListFeedUpdatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeedUpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeedUpdatesRequest) ProtoMessage() {}

func (x *ListFeedUpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeedUpdatesRequest.ProtoReflect.Descriptor instead.
func (*ListFeedUpdatesRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{22}
}

func (x *ListFeedUpdatesRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *ListFeedUpdatesRequest) GetFeedId() string {
	if x != nil {
		return x.FeedId
	}
	return ""
}

type ListFeedUpdatesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updates []*FeedUpdate `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
}

func (x *ListFeedUpdatesReply) Reset() {
	*x = ListFeedUpdatesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeedUpdatesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeedUpdatesReply) ProtoMessage() {}

func (x *ListFeedUpdatesReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeedUpdatesReply.ProtoReflect.Descriptor instead.
func (*ListFeedUpdatesReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{23}
}

func (x *ListFeedUpdatesReply) GetUpdates() []*FeedUpdate {
	if x != nil {
		return x.Updates
	}
	return nil
}

type GetFeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	FeedId   string `protobuf:"bytes,2,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
}

func (x *GetFeedRequest) Reset() {
	*x = GetFeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedRequest) ProtoMessage() {}

func (x *GetFeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedRequest.ProtoReflect.Descriptor instead.
func (*GetFeedRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{24}
}

func (x *GetFeedRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *GetFeedRequest) GetFeedId() string {
	if x != nil {
		return x.FeedId
	}
	return ""
}

type ListTransfersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
}

func (x *ListTransfersRequest) Reset() {
	*x = ListTransfersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTransfersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTransfersRequest) ProtoMessage() {}

func (x *ListTransfersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTransfersRequest.ProtoReflect.Descriptor instead.
func (*ListTransfersRequest) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{25}
}

func (x *ListTransfersRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

type ListTransfersReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transfers []*Transfer `protobuf:"bytes,1,rep,name=transfers,proto3" json:"transfers,omitempty"`
}

func (x *ListTransfersReply) Reset() {
	*x = ListTransfersReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTransfersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTransfersReply) ProtoMessage() {}

func (x *ListTransfersReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTransfersReply.ProtoReflect.Descriptor instead.
func (*ListTransfersReply) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{26}
}

func (x *ListTransfersReply) GetTransfers() []*Transfer {
	if x != nil {
		return x.Transfers
	}
	return nil
}

type System struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status    System_Status         `protobuf:"varint,3,opt,name=status,proto3,enum=System_Status" json:"status,omitempty"`
	Agencies  *System_ChildEntities `protobuf:"bytes,4,opt,name=agencies,proto3,oneof" json:"agencies,omitempty"`
	Feeds     *System_ChildEntities `protobuf:"bytes,5,opt,name=feeds,proto3,oneof" json:"feeds,omitempty"`
	Routes    *System_ChildEntities `protobuf:"bytes,6,opt,name=routes,proto3,oneof" json:"routes,omitempty"`
	Stops     *System_ChildEntities `protobuf:"bytes,7,opt,name=stops,proto3,oneof" json:"stops,omitempty"`
	Transfers *System_ChildEntities `protobuf:"bytes,8,opt,name=transfers,proto3,oneof" json:"transfers,omitempty"`
	Href      *string               `protobuf:"bytes,9,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *System) Reset() {
	*x = System{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *System) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*System) ProtoMessage() {}

func (x *System) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use System.ProtoReflect.Descriptor instead.
func (*System) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{27}
}

func (x *System) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *System) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *System) GetStatus() System_Status {
	if x != nil {
		return x.Status
	}
	return System_UNKNOWN
}

func (x *System) GetAgencies() *System_ChildEntities {
	if x != nil {
		return x.Agencies
	}
	return nil
}

func (x *System) GetFeeds() *System_ChildEntities {
	if x != nil {
		return x.Feeds
	}
	return nil
}

func (x *System) GetRoutes() *System_ChildEntities {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *System) GetStops() *System_ChildEntities {
	if x != nil {
		return x.Stops
	}
	return nil
}

func (x *System) GetTransfers() *System_ChildEntities {
	if x != nil {
		return x.Transfers
	}
	return nil
}

func (x *System) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

type Stop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          *string            `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Longitude     *float64           `protobuf:"fixed64,3,opt,name=longitude,proto3,oneof" json:"longitude,omitempty"`
	Latitude      *float64           `protobuf:"fixed64,4,opt,name=latitude,proto3,oneof" json:"latitude,omitempty"`
	Url           *string            `protobuf:"bytes,5,opt,name=url,proto3,oneof" json:"url,omitempty"`
	StopHeadsigns []string           `protobuf:"bytes,7,rep,name=stop_headsigns,json=stopHeadsigns,proto3" json:"stop_headsigns,omitempty"`
	ParentStop    *Stop_Preview      `protobuf:"bytes,13,opt,name=parent_stop,json=parentStop,proto3,oneof" json:"parent_stop,omitempty"`
	ChildStops    []*Stop_Preview    `protobuf:"bytes,14,rep,name=child_stops,json=childStops,proto3" json:"child_stops,omitempty"`
	ServiceMaps   []*Stop_ServiceMap `protobuf:"bytes,8,rep,name=service_maps,json=serviceMaps,proto3" json:"service_maps,omitempty"`
	Alerts        []*Alert_Preview   `protobuf:"bytes,15,rep,name=alerts,proto3" json:"alerts,omitempty"`
	StopTimes     []*Stop_StopTime   `protobuf:"bytes,6,rep,name=stop_times,json=stopTimes,proto3" json:"stop_times,omitempty"`
	Transfers     []*Transfer        `protobuf:"bytes,16,rep,name=transfers,proto3" json:"transfers,omitempty"`
}

func (x *Stop) Reset() {
	*x = Stop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stop) ProtoMessage() {}

func (x *Stop) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stop.ProtoReflect.Descriptor instead.
func (*Stop) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{28}
}

func (x *Stop) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Stop) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Stop) GetLongitude() float64 {
	if x != nil && x.Longitude != nil {
		return *x.Longitude
	}
	return 0
}

func (x *Stop) GetLatitude() float64 {
	if x != nil && x.Latitude != nil {
		return *x.Latitude
	}
	return 0
}

func (x *Stop) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *Stop) GetStopHeadsigns() []string {
	if x != nil {
		return x.StopHeadsigns
	}
	return nil
}

func (x *Stop) GetParentStop() *Stop_Preview {
	if x != nil {
		return x.ParentStop
	}
	return nil
}

func (x *Stop) GetChildStops() []*Stop_Preview {
	if x != nil {
		return x.ChildStops
	}
	return nil
}

func (x *Stop) GetServiceMaps() []*Stop_ServiceMap {
	if x != nil {
		return x.ServiceMaps
	}
	return nil
}

func (x *Stop) GetAlerts() []*Alert_Preview {
	if x != nil {
		return x.Alerts
	}
	return nil
}

func (x *Stop) GetStopTimes() []*Stop_StopTime {
	if x != nil {
		return x.StopTimes
	}
	return nil
}

func (x *Stop) GetTransfers() []*Transfer {
	if x != nil {
		return x.Transfers
	}
	return nil
}

type Trip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// TODO(APIv2): remove route?
	Route       *Route_Preview   `protobuf:"bytes,2,opt,name=route,proto3" json:"route,omitempty"`
	LastStop    *Stop_Preview    `protobuf:"bytes,3,opt,name=last_stop,json=lastStop,proto3" json:"last_stop,omitempty"`
	StartedAt   *int64           `protobuf:"varint,4,opt,name=started_at,json=startedAt,proto3,oneof" json:"started_at,omitempty"`
	Vehicle     *Vehicle_Preview `protobuf:"bytes,6,opt,name=vehicle,proto3,oneof" json:"vehicle,omitempty"`
	DirectionId bool             `protobuf:"varint,7,opt,name=direction_id,json=directionId,proto3" json:"direction_id,omitempty"`
	StopTimes   []*Trip_StopTime `protobuf:"bytes,9,rep,name=stop_times,json=stopTimes,proto3" json:"stop_times,omitempty"`
	Href        *string          `protobuf:"bytes,10,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *Trip) Reset() {
	*x = Trip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trip) ProtoMessage() {}

func (x *Trip) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trip.ProtoReflect.Descriptor instead.
func (*Trip) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{29}
}

func (x *Trip) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Trip) GetRoute() *Route_Preview {
	if x != nil {
		return x.Route
	}
	return nil
}

func (x *Trip) GetLastStop() *Stop_Preview {
	if x != nil {
		return x.LastStop
	}
	return nil
}

func (x *Trip) GetStartedAt() int64 {
	if x != nil && x.StartedAt != nil {
		return *x.StartedAt
	}
	return 0
}

func (x *Trip) GetVehicle() *Vehicle_Preview {
	if x != nil {
		return x.Vehicle
	}
	return nil
}

func (x *Trip) GetDirectionId() bool {
	if x != nil {
		return x.DirectionId
	}
	return false
}

func (x *Trip) GetStopTimes() []*Trip_StopTime {
	if x != nil {
		return x.StopTimes
	}
	return nil
}

func (x *Trip) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

type Vehicle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Vehicle) Reset() {
	*x = Vehicle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vehicle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vehicle) ProtoMessage() {}

func (x *Vehicle) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vehicle.ProtoReflect.Descriptor instead.
func (*Vehicle) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{30}
}

type Route struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ShortName   *string `protobuf:"bytes,2,opt,name=short_name,json=shortName,proto3,oneof" json:"short_name,omitempty"`
	LongName    *string `protobuf:"bytes,3,opt,name=long_name,json=longName,proto3,oneof" json:"long_name,omitempty"`
	Color       string  `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	TextColor   string  `protobuf:"bytes,5,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	Description *string `protobuf:"bytes,6,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Url         *string `protobuf:"bytes,7,opt,name=url,proto3,oneof" json:"url,omitempty"`
	SortOrder   *int32  `protobuf:"varint,13,opt,name=sort_order,json=sortOrder,proto3,oneof" json:"sort_order,omitempty"`
	// TODO: make these enums
	ContinuousPickup  string `protobuf:"bytes,14,opt,name=continuous_pickup,json=continuousPickup,proto3" json:"continuous_pickup,omitempty"`
	ContinuousDropOff string `protobuf:"bytes,15,opt,name=continuous_drop_off,json=continuousDropOff,proto3" json:"continuous_drop_off,omitempty"`
	// TODO: make this an enum
	Type string `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`
	// An estimate of the interval of time between consecutive trains, in seconds.
	EstimatedHeadway *int32              `protobuf:"varint,9,opt,name=estimated_headway,json=estimatedHeadway,proto3,oneof" json:"estimated_headway,omitempty"`
	Agency           *Agency_Preview     `protobuf:"bytes,10,opt,name=agency,proto3" json:"agency,omitempty"`
	ServiceMaps      []*Route_ServiceMap `protobuf:"bytes,11,rep,name=service_maps,json=serviceMaps,proto3" json:"service_maps,omitempty"`
	Alerts           []*Alert_Preview    `protobuf:"bytes,12,rep,name=alerts,proto3" json:"alerts,omitempty"`
}

func (x *Route) Reset() {
	*x = Route{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{31}
}

func (x *Route) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Route) GetShortName() string {
	if x != nil && x.ShortName != nil {
		return *x.ShortName
	}
	return ""
}

func (x *Route) GetLongName() string {
	if x != nil && x.LongName != nil {
		return *x.LongName
	}
	return ""
}

func (x *Route) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Route) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *Route) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Route) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *Route) GetSortOrder() int32 {
	if x != nil && x.SortOrder != nil {
		return *x.SortOrder
	}
	return 0
}

func (x *Route) GetContinuousPickup() string {
	if x != nil {
		return x.ContinuousPickup
	}
	return ""
}

func (x *Route) GetContinuousDropOff() string {
	if x != nil {
		return x.ContinuousDropOff
	}
	return ""
}

func (x *Route) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Route) GetEstimatedHeadway() int32 {
	if x != nil && x.EstimatedHeadway != nil {
		return *x.EstimatedHeadway
	}
	return 0
}

func (x *Route) GetAgency() *Agency_Preview {
	if x != nil {
		return x.Agency
	}
	return nil
}

func (x *Route) GetServiceMaps() []*Route_ServiceMap {
	if x != nil {
		return x.ServiceMaps
	}
	return nil
}

func (x *Route) GetAlerts() []*Alert_Preview {
	if x != nil {
		return x.Alerts
	}
	return nil
}

type Feed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PeriodicUpdateEnabled bool          `protobuf:"varint,2,opt,name=periodic_update_enabled,json=periodicUpdateEnabled,proto3" json:"periodic_update_enabled,omitempty"`
	PeriodicUpdatePeriod  *string       `protobuf:"bytes,3,opt,name=periodic_update_period,json=periodicUpdatePeriod,proto3,oneof" json:"periodic_update_period,omitempty"`
	Updates               *Feed_Updates `protobuf:"bytes,4,opt,name=updates,proto3,oneof" json:"updates,omitempty"`
}

func (x *Feed) Reset() {
	*x = Feed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Feed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feed) ProtoMessage() {}

func (x *Feed) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feed.ProtoReflect.Descriptor instead.
func (*Feed) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{32}
}

func (x *Feed) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Feed) GetPeriodicUpdateEnabled() bool {
	if x != nil {
		return x.PeriodicUpdateEnabled
	}
	return false
}

func (x *Feed) GetPeriodicUpdatePeriod() string {
	if x != nil && x.PeriodicUpdatePeriod != nil {
		return *x.PeriodicUpdatePeriod
	}
	return ""
}

func (x *Feed) GetUpdates() *Feed_Updates {
	if x != nil {
		return x.Updates
	}
	return nil
}

type Agency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Url      string           `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Timezone string           `protobuf:"bytes,4,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Language *string          `protobuf:"bytes,5,opt,name=language,proto3,oneof" json:"language,omitempty"`
	Phone    *string          `protobuf:"bytes,6,opt,name=phone,proto3,oneof" json:"phone,omitempty"`
	FareUrl  *string          `protobuf:"bytes,7,opt,name=fare_url,json=fareUrl,proto3,oneof" json:"fare_url,omitempty"`
	Email    *string          `protobuf:"bytes,8,opt,name=email,proto3,oneof" json:"email,omitempty"`
	Routes   []*Route_Preview `protobuf:"bytes,9,rep,name=routes,proto3" json:"routes,omitempty"`
	Alerts   []*Alert_Preview `protobuf:"bytes,10,rep,name=alerts,proto3" json:"alerts,omitempty"`
	Href     *string          `protobuf:"bytes,11,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *Agency) Reset() {
	*x = Agency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Agency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agency) ProtoMessage() {}

func (x *Agency) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agency.ProtoReflect.Descriptor instead.
func (*Agency) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{33}
}

func (x *Agency) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Agency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Agency) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Agency) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *Agency) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *Agency) GetPhone() string {
	if x != nil && x.Phone != nil {
		return *x.Phone
	}
	return ""
}

func (x *Agency) GetFareUrl() string {
	if x != nil && x.FareUrl != nil {
		return *x.FareUrl
	}
	return ""
}

func (x *Agency) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *Agency) GetRoutes() []*Route_Preview {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *Agency) GetAlerts() []*Alert_Preview {
	if x != nil {
		return x.Alerts
	}
	return nil
}

func (x *Agency) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

// TODO; alphabetize the messages
type Alert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Cause               Alert_Cause           `protobuf:"varint,2,opt,name=cause,proto3,enum=Alert_Cause" json:"cause,omitempty"`
	Effect              Alert_Effect          `protobuf:"varint,3,opt,name=effect,proto3,enum=Alert_Effect" json:"effect,omitempty"`
	CurrentActivePeriod *Alert_ActivePeriod   `protobuf:"bytes,4,opt,name=current_active_period,json=currentActivePeriod,proto3,oneof" json:"current_active_period,omitempty"`
	AllActivePeriods    []*Alert_ActivePeriod `protobuf:"bytes,8,rep,name=all_active_periods,json=allActivePeriods,proto3" json:"all_active_periods,omitempty"`
	Header              []*Alert_Text         `protobuf:"bytes,5,rep,name=header,proto3" json:"header,omitempty"`
	Description         []*Alert_Text         `protobuf:"bytes,6,rep,name=description,proto3" json:"description,omitempty"`
	Url                 []*Alert_Text         `protobuf:"bytes,7,rep,name=url,proto3" json:"url,omitempty"`
}

func (x *Alert) Reset() {
	*x = Alert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert) ProtoMessage() {}

func (x *Alert) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert.ProtoReflect.Descriptor instead.
func (*Alert) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{34}
}

func (x *Alert) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Alert) GetCause() Alert_Cause {
	if x != nil {
		return x.Cause
	}
	return Alert_UNKNOWN_CAUSE
}

func (x *Alert) GetEffect() Alert_Effect {
	if x != nil {
		return x.Effect
	}
	return Alert_UNKNOWN_EFFECT
}

func (x *Alert) GetCurrentActivePeriod() *Alert_ActivePeriod {
	if x != nil {
		return x.CurrentActivePeriod
	}
	return nil
}

func (x *Alert) GetAllActivePeriods() []*Alert_ActivePeriod {
	if x != nil {
		return x.AllActivePeriods
	}
	return nil
}

func (x *Alert) GetHeader() []*Alert_Text {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Alert) GetDescription() []*Alert_Text {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Alert) GetUrl() []*Alert_Text {
	if x != nil {
		return x.Url
	}
	return nil
}

type EstimatedTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time        *int64 `protobuf:"varint,1,opt,name=time,proto3,oneof" json:"time,omitempty"`
	Delay       *int32 `protobuf:"varint,2,opt,name=delay,proto3,oneof" json:"delay,omitempty"`
	Uncertainty *int32 `protobuf:"varint,3,opt,name=uncertainty,proto3,oneof" json:"uncertainty,omitempty"`
}

func (x *EstimatedTime) Reset() {
	*x = EstimatedTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimatedTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimatedTime) ProtoMessage() {}

func (x *EstimatedTime) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimatedTime.ProtoReflect.Descriptor instead.
func (*EstimatedTime) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{35}
}

func (x *EstimatedTime) GetTime() int64 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *EstimatedTime) GetDelay() int32 {
	if x != nil && x.Delay != nil {
		return *x.Delay
	}
	return 0
}

func (x *EstimatedTime) GetUncertainty() int32 {
	if x != nil && x.Uncertainty != nil {
		return *x.Uncertainty
	}
	return 0
}

type Transfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromStop        *Stop_Preview `protobuf:"bytes,1,opt,name=from_stop,json=fromStop,proto3" json:"from_stop,omitempty"`
	ToStop          *Stop_Preview `protobuf:"bytes,2,opt,name=to_stop,json=toStop,proto3" json:"to_stop,omitempty"`
	Type            Transfer_Type `protobuf:"varint,3,opt,name=type,proto3,enum=Transfer_Type" json:"type,omitempty"`
	MinTransferTime *int32        `protobuf:"varint,4,opt,name=min_transfer_time,json=minTransferTime,proto3,oneof" json:"min_transfer_time,omitempty"`
	Distance        *int32        `protobuf:"varint,5,opt,name=distance,proto3,oneof" json:"distance,omitempty"`
}

func (x *Transfer) Reset() {
	*x = Transfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transfer) ProtoMessage() {}

func (x *Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transfer.ProtoReflect.Descriptor instead.
func (*Transfer) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{36}
}

func (x *Transfer) GetFromStop() *Stop_Preview {
	if x != nil {
		return x.FromStop
	}
	return nil
}

func (x *Transfer) GetToStop() *Stop_Preview {
	if x != nil {
		return x.ToStop
	}
	return nil
}

func (x *Transfer) GetType() Transfer_Type {
	if x != nil {
		return x.Type
	}
	return Transfer_RECOMMENDED
}

func (x *Transfer) GetMinTransferTime() int32 {
	if x != nil && x.MinTransferTime != nil {
		return *x.MinTransferTime
	}
	return 0
}

func (x *Transfer) GetDistance() int32 {
	if x != nil && x.Distance != nil {
		return *x.Distance
	}
	return 0
}

type FeedUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// TODO: make these enums
	Type          string  `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Status        string  `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Result        *string `protobuf:"bytes,4,opt,name=result,proto3,oneof" json:"result,omitempty"`
	StackTrace    *string `protobuf:"bytes,5,opt,name=stack_trace,json=stackTrace,proto3,oneof" json:"stack_trace,omitempty"`
	ContentHash   *string `protobuf:"bytes,6,opt,name=content_hash,json=contentHash,proto3,oneof" json:"content_hash,omitempty"`
	ContentLength *int32  `protobuf:"varint,7,opt,name=content_length,json=contentLength,proto3,oneof" json:"content_length,omitempty"`
	CompletedAt   *int64  `protobuf:"varint,8,opt,name=completed_at,json=completedAt,proto3,oneof" json:"completed_at,omitempty"`
}

func (x *FeedUpdate) Reset() {
	*x = FeedUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedUpdate) ProtoMessage() {}

func (x *FeedUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedUpdate.ProtoReflect.Descriptor instead.
func (*FeedUpdate) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{37}
}

func (x *FeedUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FeedUpdate) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FeedUpdate) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FeedUpdate) GetResult() string {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return ""
}

func (x *FeedUpdate) GetStackTrace() string {
	if x != nil && x.StackTrace != nil {
		return *x.StackTrace
	}
	return ""
}

func (x *FeedUpdate) GetContentHash() string {
	if x != nil && x.ContentHash != nil {
		return *x.ContentHash
	}
	return ""
}

func (x *FeedUpdate) GetContentLength() int32 {
	if x != nil && x.ContentLength != nil {
		return *x.ContentLength
	}
	return 0
}

func (x *FeedUpdate) GetCompletedAt() int64 {
	if x != nil && x.CompletedAt != nil {
		return *x.CompletedAt
	}
	return 0
}

type EntrypointReply_TransiterDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string                                  `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Href    string                                  `protobuf:"bytes,2,opt,name=href,proto3" json:"href,omitempty"`
	Build   *EntrypointReply_TransiterDetails_Build `protobuf:"bytes,3,opt,name=build,proto3,oneof" json:"build,omitempty"`
}

func (x *EntrypointReply_TransiterDetails) Reset() {
	*x = EntrypointReply_TransiterDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntrypointReply_TransiterDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntrypointReply_TransiterDetails) ProtoMessage() {}

func (x *EntrypointReply_TransiterDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntrypointReply_TransiterDetails.ProtoReflect.Descriptor instead.
func (*EntrypointReply_TransiterDetails) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{1, 0}
}

func (x *EntrypointReply_TransiterDetails) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *EntrypointReply_TransiterDetails) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

func (x *EntrypointReply_TransiterDetails) GetBuild() *EntrypointReply_TransiterDetails_Build {
	if x != nil {
		return x.Build
	}
	return nil
}

type EntrypointReply_TransiterDetails_Build struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number           string `protobuf:"bytes,3,opt,name=number,proto3" json:"number,omitempty"`
	BuiltAt          string `protobuf:"bytes,4,opt,name=built_at,json=builtAt,proto3" json:"built_at,omitempty"`
	BuiltAtTimestamp string `protobuf:"bytes,5,opt,name=built_at_timestamp,json=builtAtTimestamp,proto3" json:"built_at_timestamp,omitempty"`
	GitCommitHash    string `protobuf:"bytes,6,opt,name=git_commit_hash,json=gitCommitHash,proto3" json:"git_commit_hash,omitempty"`
	Href             string `protobuf:"bytes,7,opt,name=href,proto3" json:"href,omitempty"`
}

func (x *EntrypointReply_TransiterDetails_Build) Reset() {
	*x = EntrypointReply_TransiterDetails_Build{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntrypointReply_TransiterDetails_Build) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntrypointReply_TransiterDetails_Build) ProtoMessage() {}

func (x *EntrypointReply_TransiterDetails_Build) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntrypointReply_TransiterDetails_Build.ProtoReflect.Descriptor instead.
func (*EntrypointReply_TransiterDetails_Build) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *EntrypointReply_TransiterDetails_Build) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *EntrypointReply_TransiterDetails_Build) GetBuiltAt() string {
	if x != nil {
		return x.BuiltAt
	}
	return ""
}

func (x *EntrypointReply_TransiterDetails_Build) GetBuiltAtTimestamp() string {
	if x != nil {
		return x.BuiltAtTimestamp
	}
	return ""
}

func (x *EntrypointReply_TransiterDetails_Build) GetGitCommitHash() string {
	if x != nil {
		return x.GitCommitHash
	}
	return ""
}

func (x *EntrypointReply_TransiterDetails_Build) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

type System_ChildEntities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Href  *string `protobuf:"bytes,2,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *System_ChildEntities) Reset() {
	*x = System_ChildEntities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *System_ChildEntities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*System_ChildEntities) ProtoMessage() {}

func (x *System_ChildEntities) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use System_ChildEntities.ProtoReflect.Descriptor instead.
func (*System_ChildEntities) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{27, 0}
}

func (x *System_ChildEntities) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *System_ChildEntities) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

// Preview contains preview information about the system.
type System_Preview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string  `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Href *string `protobuf:"bytes,1,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *System_Preview) Reset() {
	*x = System_Preview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *System_Preview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*System_Preview) ProtoMessage() {}

func (x *System_Preview) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use System_Preview.ProtoReflect.Descriptor instead.
func (*System_Preview) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{27, 1}
}

func (x *System_Preview) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *System_Preview) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

type Stop_ServiceMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigId string           `protobuf:"bytes,1,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	Routes   []*Route_Preview `protobuf:"bytes,2,rep,name=routes,proto3" json:"routes,omitempty"`
}

func (x *Stop_ServiceMap) Reset() {
	*x = Stop_ServiceMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stop_ServiceMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stop_ServiceMap) ProtoMessage() {}

func (x *Stop_ServiceMap) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stop_ServiceMap.ProtoReflect.Descriptor instead.
func (*Stop_ServiceMap) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{28, 0}
}

func (x *Stop_ServiceMap) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *Stop_ServiceMap) GetRoutes() []*Route_Preview {
	if x != nil {
		return x.Routes
	}
	return nil
}

type Stop_StopTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arrival      *EstimatedTime `protobuf:"bytes,1,opt,name=arrival,proto3" json:"arrival,omitempty"`
	Departure    *EstimatedTime `protobuf:"bytes,2,opt,name=departure,proto3" json:"departure,omitempty"`
	Future       bool           `protobuf:"varint,4,opt,name=future,proto3" json:"future,omitempty"`
	StopSequence int32          `protobuf:"varint,5,opt,name=stop_sequence,json=stopSequence,proto3" json:"stop_sequence,omitempty"`
	Headsign     *string        `protobuf:"bytes,6,opt,name=headsign,proto3,oneof" json:"headsign,omitempty"`
	Track        *string        `protobuf:"bytes,3,opt,name=track,proto3,oneof" json:"track,omitempty"`
	Trip         *Trip_Preview  `protobuf:"bytes,7,opt,name=trip,proto3" json:"trip,omitempty"`
}

func (x *Stop_StopTime) Reset() {
	*x = Stop_StopTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stop_StopTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stop_StopTime) ProtoMessage() {}

func (x *Stop_StopTime) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stop_StopTime.ProtoReflect.Descriptor instead.
func (*Stop_StopTime) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{28, 1}
}

func (x *Stop_StopTime) GetArrival() *EstimatedTime {
	if x != nil {
		return x.Arrival
	}
	return nil
}

func (x *Stop_StopTime) GetDeparture() *EstimatedTime {
	if x != nil {
		return x.Departure
	}
	return nil
}

func (x *Stop_StopTime) GetFuture() bool {
	if x != nil {
		return x.Future
	}
	return false
}

func (x *Stop_StopTime) GetStopSequence() int32 {
	if x != nil {
		return x.StopSequence
	}
	return 0
}

func (x *Stop_StopTime) GetHeadsign() string {
	if x != nil && x.Headsign != nil {
		return *x.Headsign
	}
	return ""
}

func (x *Stop_StopTime) GetTrack() string {
	if x != nil && x.Track != nil {
		return *x.Track
	}
	return ""
}

func (x *Stop_StopTime) GetTrip() *Trip_Preview {
	if x != nil {
		return x.Trip
	}
	return nil
}

// Preview contains preview information about the stop.
type Stop_Preview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// TODO: transfers and service maps
	Href *string `protobuf:"bytes,7,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *Stop_Preview) Reset() {
	*x = Stop_Preview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stop_Preview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stop_Preview) ProtoMessage() {}

func (x *Stop_Preview) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stop_Preview.ProtoReflect.Descriptor instead.
func (*Stop_Preview) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{28, 2}
}

func (x *Stop_Preview) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Stop_Preview) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Stop_Preview) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

type Trip_StopTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arrival      *EstimatedTime `protobuf:"bytes,1,opt,name=arrival,proto3" json:"arrival,omitempty"`
	Departure    *EstimatedTime `protobuf:"bytes,2,opt,name=departure,proto3" json:"departure,omitempty"`
	Future       bool           `protobuf:"varint,4,opt,name=future,proto3" json:"future,omitempty"`
	StopSequence int32          `protobuf:"varint,5,opt,name=stop_sequence,json=stopSequence,proto3" json:"stop_sequence,omitempty"`
	Headsign     *string        `protobuf:"bytes,6,opt,name=headsign,proto3,oneof" json:"headsign,omitempty"`
	Track        *string        `protobuf:"bytes,3,opt,name=track,proto3,oneof" json:"track,omitempty"`
	Stop         *Stop_Preview  `protobuf:"bytes,7,opt,name=stop,proto3" json:"stop,omitempty"`
}

func (x *Trip_StopTime) Reset() {
	*x = Trip_StopTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trip_StopTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trip_StopTime) ProtoMessage() {}

func (x *Trip_StopTime) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trip_StopTime.ProtoReflect.Descriptor instead.
func (*Trip_StopTime) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{29, 0}
}

func (x *Trip_StopTime) GetArrival() *EstimatedTime {
	if x != nil {
		return x.Arrival
	}
	return nil
}

func (x *Trip_StopTime) GetDeparture() *EstimatedTime {
	if x != nil {
		return x.Departure
	}
	return nil
}

func (x *Trip_StopTime) GetFuture() bool {
	if x != nil {
		return x.Future
	}
	return false
}

func (x *Trip_StopTime) GetStopSequence() int32 {
	if x != nil {
		return x.StopSequence
	}
	return 0
}

func (x *Trip_StopTime) GetHeadsign() string {
	if x != nil && x.Headsign != nil {
		return *x.Headsign
	}
	return ""
}

func (x *Trip_StopTime) GetTrack() string {
	if x != nil && x.Track != nil {
		return *x.Track
	}
	return ""
}

func (x *Trip_StopTime) GetStop() *Stop_Preview {
	if x != nil {
		return x.Stop
	}
	return nil
}

// Preview contains preview information about the trip.
type Trip_Preview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Route       *Route_Preview   `protobuf:"bytes,2,opt,name=route,proto3" json:"route,omitempty"`
	LastStop    *Stop_Preview    `protobuf:"bytes,3,opt,name=last_stop,json=lastStop,proto3" json:"last_stop,omitempty"`
	StartedAt   *int64           `protobuf:"varint,10,opt,name=started_at,json=startedAt,proto3,oneof" json:"started_at,omitempty"`
	Vehicle     *Vehicle_Preview `protobuf:"bytes,6,opt,name=vehicle,proto3,oneof" json:"vehicle,omitempty"`
	DirectionId bool             `protobuf:"varint,4,opt,name=direction_id,json=directionId,proto3" json:"direction_id,omitempty"`
	Href        *string          `protobuf:"bytes,5,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *Trip_Preview) Reset() {
	*x = Trip_Preview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trip_Preview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trip_Preview) ProtoMessage() {}

func (x *Trip_Preview) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trip_Preview.ProtoReflect.Descriptor instead.
func (*Trip_Preview) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{29, 1}
}

func (x *Trip_Preview) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Trip_Preview) GetRoute() *Route_Preview {
	if x != nil {
		return x.Route
	}
	return nil
}

func (x *Trip_Preview) GetLastStop() *Stop_Preview {
	if x != nil {
		return x.LastStop
	}
	return nil
}

func (x *Trip_Preview) GetStartedAt() int64 {
	if x != nil && x.StartedAt != nil {
		return *x.StartedAt
	}
	return 0
}

func (x *Trip_Preview) GetVehicle() *Vehicle_Preview {
	if x != nil {
		return x.Vehicle
	}
	return nil
}

func (x *Trip_Preview) GetDirectionId() bool {
	if x != nil {
		return x.DirectionId
	}
	return false
}

func (x *Trip_Preview) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

// Preview contains preview information about the vehice.
type Vehicle_Preview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Vehicle_Preview) Reset() {
	*x = Vehicle_Preview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vehicle_Preview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vehicle_Preview) ProtoMessage() {}

func (x *Vehicle_Preview) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vehicle_Preview.ProtoReflect.Descriptor instead.
func (*Vehicle_Preview) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{30, 0}
}

func (x *Vehicle_Preview) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Route_ServiceMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigId string          `protobuf:"bytes,1,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
	Stops    []*Stop_Preview `protobuf:"bytes,2,rep,name=stops,proto3" json:"stops,omitempty"`
}

func (x *Route_ServiceMap) Reset() {
	*x = Route_ServiceMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Route_ServiceMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route_ServiceMap) ProtoMessage() {}

func (x *Route_ServiceMap) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route_ServiceMap.ProtoReflect.Descriptor instead.
func (*Route_ServiceMap) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{31, 0}
}

func (x *Route_ServiceMap) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *Route_ServiceMap) GetStops() []*Stop_Preview {
	if x != nil {
		return x.Stops
	}
	return nil
}

// Preview contains preview information about the route.
type Route_Preview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// TODO(APIv2): remove? or add text_color?
	Color string `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	// Will be populated only if the system is not obvious
	System *System `protobuf:"bytes,8,opt,name=system,proto3,oneof" json:"system,omitempty"`
	Href   *string `protobuf:"bytes,3,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *Route_Preview) Reset() {
	*x = Route_Preview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Route_Preview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route_Preview) ProtoMessage() {}

func (x *Route_Preview) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route_Preview.ProtoReflect.Descriptor instead.
func (*Route_Preview) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{31, 1}
}

func (x *Route_Preview) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Route_Preview) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Route_Preview) GetSystem() *System {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *Route_Preview) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

type Feed_Updates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Href *string `protobuf:"bytes,1,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *Feed_Updates) Reset() {
	*x = Feed_Updates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Feed_Updates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feed_Updates) ProtoMessage() {}

func (x *Feed_Updates) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feed_Updates.ProtoReflect.Descriptor instead.
func (*Feed_Updates) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{32, 0}
}

func (x *Feed_Updates) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

// Preview contains preview information about the feed.
type Feed_Preview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PeriodicUpdateEnabled bool    `protobuf:"varint,2,opt,name=periodic_update_enabled,json=periodicUpdateEnabled,proto3" json:"periodic_update_enabled,omitempty"`
	PeriodicUpdatePeriod  *string `protobuf:"bytes,3,opt,name=periodic_update_period,json=periodicUpdatePeriod,proto3,oneof" json:"periodic_update_period,omitempty"`
	Href                  *string `protobuf:"bytes,4,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *Feed_Preview) Reset() {
	*x = Feed_Preview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Feed_Preview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feed_Preview) ProtoMessage() {}

func (x *Feed_Preview) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feed_Preview.ProtoReflect.Descriptor instead.
func (*Feed_Preview) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{32, 1}
}

func (x *Feed_Preview) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Feed_Preview) GetPeriodicUpdateEnabled() bool {
	if x != nil {
		return x.PeriodicUpdateEnabled
	}
	return false
}

func (x *Feed_Preview) GetPeriodicUpdatePeriod() string {
	if x != nil && x.PeriodicUpdatePeriod != nil {
		return *x.PeriodicUpdatePeriod
	}
	return ""
}

func (x *Feed_Preview) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

// Preview contains preview information about the agency.
type Agency_Preview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Href *string `protobuf:"bytes,3,opt,name=href,proto3,oneof" json:"href,omitempty"`
}

func (x *Agency_Preview) Reset() {
	*x = Agency_Preview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Agency_Preview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agency_Preview) ProtoMessage() {}

func (x *Agency_Preview) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agency_Preview.ProtoReflect.Descriptor instead.
func (*Agency_Preview) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{33, 0}
}

func (x *Agency_Preview) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Agency_Preview) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Agency_Preview) GetHref() string {
	if x != nil && x.Href != nil {
		return *x.Href
	}
	return ""
}

type Alert_ActivePeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartsAt *int64 `protobuf:"varint,1,opt,name=starts_at,json=startsAt,proto3,oneof" json:"starts_at,omitempty"`
	EndsAt   *int64 `protobuf:"varint,2,opt,name=ends_at,json=endsAt,proto3,oneof" json:"ends_at,omitempty"`
}

func (x *Alert_ActivePeriod) Reset() {
	*x = Alert_ActivePeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert_ActivePeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert_ActivePeriod) ProtoMessage() {}

func (x *Alert_ActivePeriod) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert_ActivePeriod.ProtoReflect.Descriptor instead.
func (*Alert_ActivePeriod) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{34, 0}
}

func (x *Alert_ActivePeriod) GetStartsAt() int64 {
	if x != nil && x.StartsAt != nil {
		return *x.StartsAt
	}
	return 0
}

func (x *Alert_ActivePeriod) GetEndsAt() int64 {
	if x != nil && x.EndsAt != nil {
		return *x.EndsAt
	}
	return 0
}

type Alert_Text struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text     string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Language string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *Alert_Text) Reset() {
	*x = Alert_Text{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert_Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert_Text) ProtoMessage() {}

func (x *Alert_Text) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert_Text.ProtoReflect.Descriptor instead.
func (*Alert_Text) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{34, 1}
}

func (x *Alert_Text) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Alert_Text) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type Alert_Preview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Cause  Alert_Cause  `protobuf:"varint,2,opt,name=cause,proto3,enum=Alert_Cause" json:"cause,omitempty"`
	Effect Alert_Effect `protobuf:"varint,3,opt,name=effect,proto3,enum=Alert_Effect" json:"effect,omitempty"`
}

func (x *Alert_Preview) Reset() {
	*x = Alert_Preview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_public_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert_Preview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert_Preview) ProtoMessage() {}

func (x *Alert_Preview) ProtoReflect() protoreflect.Message {
	mi := &file_api_public_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert_Preview.ProtoReflect.Descriptor instead.
func (*Alert_Preview) Descriptor() ([]byte, []int) {
	return file_api_public_proto_rawDescGZIP(), []int{34, 2}
}

func (x *Alert_Preview) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Alert_Preview) GetCause() Alert_Cause {
	if x != nil {
		return x.Cause
	}
	return Alert_UNKNOWN_CAUSE
}

func (x *Alert_Preview) GetEffect() Alert_Effect {
	if x != nil {
		return x.Effect
	}
	return Alert_UNKNOWN_EFFECT
}

var File_api_public_proto protoreflect.FileDescriptor

var file_api_public_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x13, 0x0a, 0x11, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb5, 0x03, 0x0a, 0x0f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3f, 0x0a, 0x09, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x07, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x07, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xb5, 0x02, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x12, 0x42, 0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x48, 0x00, 0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x88, 0x01, 0x01, 0x1a, 0xa4, 0x01, 0x0a,
	0x05, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19,
	0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x41, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x75, 0x69,
	0x6c, 0x74, 0x5f, 0x61, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x41, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x69, 0x74, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x67, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x72, 0x65, 0x66, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x22, 0x14, 0x0a,
	0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x35, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x21, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x52, 0x07, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x2f, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22,
	0x38, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x52,
	0x08, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67,
	0x65, 0x6e, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x67, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x74, 0x6f, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x74, 0x6f, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x74,
	0x6f, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x22,
	0x46, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x6f, 0x70, 0x49, 0x64, 0x22, 0xb5, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x6b,
	0x69, 0x70, 0x5f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x61,
	0x64, 0x77, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x73, 0x6b, 0x69,
	0x70, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64, 0x77, 0x61,
	0x79, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x73,
	0x6b, 0x69, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x70, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x22,
	0x31, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x22, 0xce, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x12, 0x36,
	0x0a, 0x17, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x68, 0x65, 0x61, 0x64, 0x77, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x15, 0x73, 0x6b, 0x69, 0x70, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x48, 0x65,
	0x61, 0x64, 0x77, 0x61, 0x79, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x73, 0x6b, 0x69, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61,
	0x70, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x70, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x22, 0x4a, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x69, 0x70, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x22,
	0x35, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x69, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x23, 0x0a, 0x05, 0x74, 0x72, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x05, 0x74, 0x72, 0x69, 0x70, 0x73, 0x22, 0x4b, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x06,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x22, 0x49, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49,
	0x64, 0x22, 0x61, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x72, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x72,
	0x69, 0x70, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65,
	0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x66, 0x65, 0x65, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x2e, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x05, 0x66, 0x65, 0x65, 0x64, 0x73, 0x22, 0x4e, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x46, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x65,
	0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x65, 0x65,
	0x64, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27,
	0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x09, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x22, 0xb6, 0x05, 0x0a, 0x06, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36,
	0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x48, 0x00, 0x52, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x05, 0x66, 0x65, 0x65, 0x64, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x48, 0x01, 0x52, 0x05,
	0x66, 0x65, 0x65, 0x64, 0x73, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x48,
	0x02, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x05,
	0x73, 0x74, 0x6f, 0x70, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x48, 0x03, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x88, 0x01, 0x01, 0x12, 0x38,
	0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x48, 0x04, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x88, 0x01,
	0x01, 0x1a, 0x47, 0x0a, 0x0d, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x88, 0x01,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x72, 0x65, 0x66, 0x1a, 0x3b, 0x0a, 0x07, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x88, 0x01, 0x01, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x68, 0x72, 0x65, 0x66, 0x22, 0x74, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e,
	0x53, 0x54, 0x41, 0x4c, 0x4c, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0c,
	0x0a, 0x08, 0x55, 0x50, 0x44, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x12,
	0x0c, 0x0a, 0x08, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x66,
	0x65, 0x65, 0x64, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x72, 0x65, 0x66,
	0x22, 0xc3, 0x07, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a,
	0x0e, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x73, 0x69, 0x67, 0x6e, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x70, 0x48, 0x65, 0x61, 0x64, 0x73,
	0x69, 0x67, 0x6e, 0x73, 0x12, 0x33, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x6f, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x48, 0x04, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x0b, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x53, 0x74, 0x6f, 0x70, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x0a, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x6f, 0x70, 0x73, 0x12, 0x33, 0x0a, 0x0c, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61,
	0x70, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x12, 0x26,
	0x0a, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x06,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x74, 0x6f,
	0x70, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x1a, 0x51,
	0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x06, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x1a, 0x95, 0x02, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28,
	0x0a, 0x07, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x07, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x45, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x73, 0x69, 0x67, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x73, 0x69, 0x67,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x12,
	0x21, 0x0a, 0x04, 0x74, 0x72, 0x69, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x54, 0x72, 0x69, 0x70, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x04, 0x74, 0x72,
	0x69, 0x70, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x73, 0x69, 0x67, 0x6e, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x1a, 0x4f, 0x0a, 0x07, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x88, 0x01,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x72, 0x65, 0x66, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x22, 0x87, 0x07, 0x0a, 0x04, 0x54, 0x72, 0x69, 0x70, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x24, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x05,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x74,
	0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x2e,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x6f,
	0x70, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x07, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x48, 0x01, 0x52, 0x07, 0x76, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0a, 0x73, 0x74, 0x6f,
	0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x54, 0x72, 0x69, 0x70, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x73,
	0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x88, 0x01,
	0x01, 0x1a, 0x95, 0x02, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28,
	0x0a, 0x07, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x07, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x45, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x73, 0x69, 0x67, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x73, 0x69, 0x67,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x12,
	0x21, 0x0a, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x53, 0x74, 0x6f, 0x70, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x04, 0x73, 0x74,
	0x6f, 0x70, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x73, 0x69, 0x67, 0x6e, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x1a, 0xa0, 0x02, 0x0a, 0x07, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x53, 0x74, 0x6f, 0x70, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x07, 0x76,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x48, 0x01,
	0x52, 0x07, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x04, 0x68, 0x72, 0x65, 0x66, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x72, 0x65, 0x66, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x72, 0x65, 0x66,
	0x22, 0x24, 0x0a, 0x07, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x1a, 0x19, 0x0a, 0x07, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xcd, 0x06, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x22, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x6c, 0x6f, 0x6e, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x6f, 0x72,
	0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52,
	0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a,
	0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x5f, 0x70, 0x69, 0x63, 0x6b,
	0x75, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e,
	0x75, 0x6f, 0x75, 0x73, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x6f, 0x66,
	0x66, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75,
	0x6f, 0x75, 0x73, 0x44, 0x72, 0x6f, 0x70, 0x4f, 0x66, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x30,
	0x0a, 0x11, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x61, 0x64,
	0x77, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x48, 0x05, 0x52, 0x10, 0x65, 0x73, 0x74,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64, 0x77, 0x61, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x27, 0x0a, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x34, 0x0a, 0x0c, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d,
	0x61, 0x70, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x70, 0x73, 0x12,
	0x26, 0x0a, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x1a, 0x4e, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x05, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x1a, 0x82, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x48, 0x00, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x88, 0x01, 0x01, 0x12,
	0x17, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x04, 0x68, 0x72, 0x65, 0x66, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x72, 0x65, 0x66, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x75, 0x72,
	0x6c, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x14, 0x0a, 0x12, 0x5f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x68,
	0x65, 0x61, 0x64, 0x77, 0x61, 0x79, 0x22, 0xd7, 0x03, 0x0a, 0x04, 0x46, 0x65, 0x65, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x36, 0x0a, 0x17, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x15, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x16, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x69, 0x63, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x14, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x69, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x2c, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x48, 0x01, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x88, 0x01, 0x01,
	0x1a, 0x2b, 0x0a, 0x07, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x68,
	0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x68, 0x72, 0x65,
	0x66, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x72, 0x65, 0x66, 0x1a, 0xc9, 0x01,
	0x0a, 0x07, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x69, 0x63, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x69, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x39, 0x0a, 0x16, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x14, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04,
	0x68, 0x72, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x68, 0x72,
	0x65, 0x66, 0x88, 0x01, 0x01, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x69, 0x63, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x72, 0x65, 0x66, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x22, 0xc2, 0x03, 0x0a, 0x06, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x66, 0x61, 0x72,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x66,
	0x61, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x06,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x06, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x04, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x88, 0x01, 0x01, 0x1a, 0x4f, 0x0a,
	0x07, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x04,
	0x68, 0x72, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x68, 0x72,
	0x65, 0x66, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x72, 0x65, 0x66, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66, 0x61, 0x72, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x68, 0x72, 0x65, 0x66, 0x22, 0xc3, 0x08, 0x0a, 0x05, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x22, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x61, 0x75, 0x73, 0x65, 0x52, 0x05, 0x63, 0x61,
	0x75, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x45, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x52, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x4c, 0x0a, 0x15, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x48, 0x00,
	0x52, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x12, 0x61, 0x6c, 0x6c, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x10, 0x61, 0x6c, 0x6c, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x2d, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x54, 0x65,
	0x78, 0x74, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0x68,
	0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x20,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x41, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x1c, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x01, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x73, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x61, 0x74, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x61, 0x74, 0x1a, 0x36, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x1a, 0x64, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x05, 0x63,
	0x61, 0x75, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x43, 0x61, 0x75, 0x73, 0x65, 0x52, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0d, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x06,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x22, 0xd8, 0x01, 0x0a, 0x05, 0x43, 0x61, 0x75, 0x73, 0x65,
	0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x43, 0x41, 0x55, 0x53,
	0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x43, 0x41, 0x55,
	0x53, 0x45, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x45, 0x43, 0x48, 0x4e, 0x49, 0x43, 0x41,
	0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x42, 0x4c, 0x45, 0x4d, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x53,
	0x54, 0x52, 0x49, 0x4b, 0x45, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x45, 0x4d, 0x4f, 0x4e,
	0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x43,
	0x43, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x4f, 0x4c, 0x49,
	0x44, 0x41, 0x59, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x45, 0x41, 0x54, 0x48, 0x45, 0x52,
	0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x41, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x43,
	0x45, 0x10, 0x09, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x0a, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x45, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x10, 0x0b, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x45,
	0x44, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x45, 0x4d, 0x45, 0x52, 0x47, 0x45, 0x4e, 0x43, 0x59, 0x10,
	0x0c, 0x22, 0xdd, 0x01, 0x0a, 0x06, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x0e,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x10, 0x00,
	0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x4f, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45, 0x44, 0x55, 0x43, 0x45, 0x44, 0x5f, 0x53, 0x45, 0x52, 0x56,
	0x49, 0x43, 0x45, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x49, 0x47, 0x4e, 0x49, 0x46, 0x49,
	0x43, 0x41, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x41, 0x59, 0x53, 0x10, 0x03, 0x12, 0x0a, 0x0a,
	0x06, 0x44, 0x45, 0x54, 0x4f, 0x55, 0x52, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x44, 0x44,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10,
	0x05, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f, 0x53, 0x45,
	0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x54, 0x48, 0x45, 0x52,
	0x5f, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x4f,
	0x50, 0x5f, 0x4d, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x09, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x5f,
	0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x10, 0x0a, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x49, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x10,
	0x0b, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x0d,
	0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x88, 0x01,
	0x01, 0x12, 0x25, 0x0a, 0x0b, 0x75, 0x6e, 0x63, 0x65, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0b, 0x75, 0x6e, 0x63, 0x65, 0x72, 0x74,
	0x61, 0x69, 0x6e, 0x74, 0x79, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x75, 0x6e, 0x63, 0x65, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x74, 0x79, 0x22, 0xbf, 0x02, 0x0a, 0x08,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x74,
	0x6f, 0x70, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d,
	0x53, 0x74, 0x6f, 0x70, 0x12, 0x26, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x2e, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x06, 0x74, 0x6f, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x22, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x2f, 0x0a, 0x11, 0x6d, 0x69, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0f, 0x6d,
	0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x88,
	0x01, 0x01, 0x22, 0x46, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45,
	0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x54,
	0x49, 0x4d, 0x45, 0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52,
	0x45, 0x53, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x5f,
	0x50, 0x4f, 0x53, 0x53, 0x49, 0x42, 0x4c, 0x45, 0x10, 0x03, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x6d,
	0x69, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xd7, 0x02,
	0x0a, 0x0a, 0x46, 0x65, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68,
	0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x0d, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12,
	0x26, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x32, 0xe6, 0x0b, 0x0a, 0x06, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x12, 0x3d, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x12, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x09, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x03, 0x12, 0x01,
	0x2f, 0x12, 0x47, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x13, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a,
	0x12, 0x08, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x45, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x11, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x7d, 0x12, 0x5f, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65,
	0x73, 0x12, 0x14, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67,
	0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x12, 0x5a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x11, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x07, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x31, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2b, 0x12, 0x29, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x2f, 0x7b, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x53,
	0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x73, 0x12, 0x11, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x74,
	0x6f, 0x70, 0x73, 0x12, 0x4f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x0f,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x05, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24,
	0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x2f, 0x7b, 0x73, 0x74, 0x6f, 0x70,
	0x5f, 0x69, 0x64, 0x7d, 0x12, 0x57, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x12, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d,
	0x12, 0x1b, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x54, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x06, 0x2e, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0x65, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x69, 0x70, 0x73,
	0x12, 0x11, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x69, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x69, 0x70, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x12, 0x2c, 0x2f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x72, 0x69, 0x70, 0x73, 0x12, 0x61, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x69, 0x70, 0x12, 0x0f, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x69, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x05, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x22, 0x3e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x38, 0x12, 0x36, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f,
	0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x2f, 0x7b, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x72,
	0x69, 0x70, 0x73, 0x2f, 0x7b, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x57, 0x0a,
	0x0a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x12, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x54, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x12, 0x10, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x06, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x22, 0x2e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x2f, 0x7b, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x53, 0x0a, 0x09,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x73, 0x12, 0x11, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f,
	0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x66, 0x65, 0x65, 0x64,
	0x73, 0x12, 0x4f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x12, 0x0f, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x05, 0x2e,
	0x46, 0x65, 0x65, 0x64, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x73, 0x2f, 0x7b, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x69,
	0x64, 0x7d, 0x12, 0x77, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x17, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x12, 0x2c, 0x2f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x73, 0x2f, 0x7b, 0x66, 0x65, 0x65, 0x64, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x63, 0x0a, 0x0d, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x15, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20,
	0x12, 0x1e, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x7b, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73,
	0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x66, 0x65, 0x6e, 0x6e, 0x65, 0x6c, 0x6c, 0x2f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_public_proto_rawDescOnce sync.Once
	file_api_public_proto_rawDescData = file_api_public_proto_rawDesc
)

func file_api_public_proto_rawDescGZIP() []byte {
	file_api_public_proto_rawDescOnce.Do(func() {
		file_api_public_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_public_proto_rawDescData)
	})
	return file_api_public_proto_rawDescData
}

var file_api_public_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_api_public_proto_msgTypes = make([]protoimpl.MessageInfo, 56)
var file_api_public_proto_goTypes = []interface{}{
	(System_Status)(0),                             // 0: System.Status
	(Alert_Cause)(0),                               // 1: Alert.Cause
	(Alert_Effect)(0),                              // 2: Alert.Effect
	(Transfer_Type)(0),                             // 3: Transfer.Type
	(*EntrypointRequest)(nil),                      // 4: EntrypointRequest
	(*EntrypointReply)(nil),                        // 5: EntrypointReply
	(*ListSystemsRequest)(nil),                     // 6: ListSystemsRequest
	(*ListSystemsReply)(nil),                       // 7: ListSystemsReply
	(*GetSystemRequest)(nil),                       // 8: GetSystemRequest
	(*ListAgenciesRequest)(nil),                    // 9: ListAgenciesRequest
	(*ListAgenciesReply)(nil),                      // 10: ListAgenciesReply
	(*GetAgencyRequest)(nil),                       // 11: GetAgencyRequest
	(*ListStopsRequest)(nil),                       // 12: ListStopsRequest
	(*ListStopsReply)(nil),                         // 13: ListStopsReply
	(*GetStopRequest)(nil),                         // 14: GetStopRequest
	(*ListRoutesRequest)(nil),                      // 15: ListRoutesRequest
	(*ListRoutesReply)(nil),                        // 16: ListRoutesReply
	(*GetRouteRequest)(nil),                        // 17: GetRouteRequest
	(*ListTripsRequest)(nil),                       // 18: ListTripsRequest
	(*ListTripsReply)(nil),                         // 19: ListTripsReply
	(*ListAlertsRequest)(nil),                      // 20: ListAlertsRequest
	(*ListAlertsReply)(nil),                        // 21: ListAlertsReply
	(*GetAlertRequest)(nil),                        // 22: GetAlertRequest
	(*GetTripRequest)(nil),                         // 23: GetTripRequest
	(*ListFeedsRequest)(nil),                       // 24: ListFeedsRequest
	(*ListFeedsReply)(nil),                         // 25: ListFeedsReply
	(*ListFeedUpdatesRequest)(nil),                 // 26: ListFeedUpdatesRequest
	(*ListFeedUpdatesReply)(nil),                   // 27: ListFeedUpdatesReply
	(*GetFeedRequest)(nil),                         // 28: GetFeedRequest
	(*ListTransfersRequest)(nil),                   // 29: ListTransfersRequest
	(*ListTransfersReply)(nil),                     // 30: ListTransfersReply
	(*System)(nil),                                 // 31: System
	(*Stop)(nil),                                   // 32: Stop
	(*Trip)(nil),                                   // 33: Trip
	(*Vehicle)(nil),                                // 34: Vehicle
	(*Route)(nil),                                  // 35: Route
	(*Feed)(nil),                                   // 36: Feed
	(*Agency)(nil),                                 // 37: Agency
	(*Alert)(nil),                                  // 38: Alert
	(*EstimatedTime)(nil),                          // 39: EstimatedTime
	(*Transfer)(nil),                               // 40: Transfer
	(*FeedUpdate)(nil),                             // 41: FeedUpdate
	(*EntrypointReply_TransiterDetails)(nil),       // 42: EntrypointReply.TransiterDetails
	(*EntrypointReply_TransiterDetails_Build)(nil), // 43: EntrypointReply.TransiterDetails.Build
	(*System_ChildEntities)(nil),                   // 44: System.ChildEntities
	(*System_Preview)(nil),                         // 45: System.Preview
	(*Stop_ServiceMap)(nil),                        // 46: Stop.ServiceMap
	(*Stop_StopTime)(nil),                          // 47: Stop.StopTime
	(*Stop_Preview)(nil),                           // 48: Stop.Preview
	(*Trip_StopTime)(nil),                          // 49: Trip.StopTime
	(*Trip_Preview)(nil),                           // 50: Trip.Preview
	(*Vehicle_Preview)(nil),                        // 51: Vehicle.Preview
	(*Route_ServiceMap)(nil),                       // 52: Route.ServiceMap
	(*Route_Preview)(nil),                          // 53: Route.Preview
	(*Feed_Updates)(nil),                           // 54: Feed.Updates
	(*Feed_Preview)(nil),                           // 55: Feed.Preview
	(*Agency_Preview)(nil),                         // 56: Agency.Preview
	(*Alert_ActivePeriod)(nil),                     // 57: Alert.ActivePeriod
	(*Alert_Text)(nil),                             // 58: Alert.Text
	(*Alert_Preview)(nil),                          // 59: Alert.Preview
}
var file_api_public_proto_depIdxs = []int32{
	42, // 0: EntrypointReply.transiter:type_name -> EntrypointReply.TransiterDetails
	45, // 1: EntrypointReply.systems:type_name -> System.Preview
	31, // 2: ListSystemsReply.systems:type_name -> System
	37, // 3: ListAgenciesReply.agencies:type_name -> Agency
	48, // 4: ListStopsReply.stops:type_name -> Stop.Preview
	35, // 5: ListRoutesReply.routes:type_name -> Route
	50, // 6: ListTripsReply.trips:type_name -> Trip.Preview
	38, // 7: ListAlertsReply.alerts:type_name -> Alert
	55, // 8: ListFeedsReply.feeds:type_name -> Feed.Preview
	41, // 9: ListFeedUpdatesReply.updates:type_name -> FeedUpdate
	40, // 10: ListTransfersReply.transfers:type_name -> Transfer
	0,  // 11: System.status:type_name -> System.Status
	44, // 12: System.agencies:type_name -> System.ChildEntities
	44, // 13: System.feeds:type_name -> System.ChildEntities
	44, // 14: System.routes:type_name -> System.ChildEntities
	44, // 15: System.stops:type_name -> System.ChildEntities
	44, // 16: System.transfers:type_name -> System.ChildEntities
	48, // 17: Stop.parent_stop:type_name -> Stop.Preview
	48, // 18: Stop.child_stops:type_name -> Stop.Preview
	46, // 19: Stop.service_maps:type_name -> Stop.ServiceMap
	59, // 20: Stop.alerts:type_name -> Alert.Preview
	47, // 21: Stop.stop_times:type_name -> Stop.StopTime
	40, // 22: Stop.transfers:type_name -> Transfer
	53, // 23: Trip.route:type_name -> Route.Preview
	48, // 24: Trip.last_stop:type_name -> Stop.Preview
	51, // 25: Trip.vehicle:type_name -> Vehicle.Preview
	49, // 26: Trip.stop_times:type_name -> Trip.StopTime
	56, // 27: Route.agency:type_name -> Agency.Preview
	52, // 28: Route.service_maps:type_name -> Route.ServiceMap
	59, // 29: Route.alerts:type_name -> Alert.Preview
	54, // 30: Feed.updates:type_name -> Feed.Updates
	53, // 31: Agency.routes:type_name -> Route.Preview
	59, // 32: Agency.alerts:type_name -> Alert.Preview
	1,  // 33: Alert.cause:type_name -> Alert.Cause
	2,  // 34: Alert.effect:type_name -> Alert.Effect
	57, // 35: Alert.current_active_period:type_name -> Alert.ActivePeriod
	57, // 36: Alert.all_active_periods:type_name -> Alert.ActivePeriod
	58, // 37: Alert.header:type_name -> Alert.Text
	58, // 38: Alert.description:type_name -> Alert.Text
	58, // 39: Alert.url:type_name -> Alert.Text
	48, // 40: Transfer.from_stop:type_name -> Stop.Preview
	48, // 41: Transfer.to_stop:type_name -> Stop.Preview
	3,  // 42: Transfer.type:type_name -> Transfer.Type
	43, // 43: EntrypointReply.TransiterDetails.build:type_name -> EntrypointReply.TransiterDetails.Build
	53, // 44: Stop.ServiceMap.routes:type_name -> Route.Preview
	39, // 45: Stop.StopTime.arrival:type_name -> EstimatedTime
	39, // 46: Stop.StopTime.departure:type_name -> EstimatedTime
	50, // 47: Stop.StopTime.trip:type_name -> Trip.Preview
	39, // 48: Trip.StopTime.arrival:type_name -> EstimatedTime
	39, // 49: Trip.StopTime.departure:type_name -> EstimatedTime
	48, // 50: Trip.StopTime.stop:type_name -> Stop.Preview
	53, // 51: Trip.Preview.route:type_name -> Route.Preview
	48, // 52: Trip.Preview.last_stop:type_name -> Stop.Preview
	51, // 53: Trip.Preview.vehicle:type_name -> Vehicle.Preview
	48, // 54: Route.ServiceMap.stops:type_name -> Stop.Preview
	31, // 55: Route.Preview.system:type_name -> System
	1,  // 56: Alert.Preview.cause:type_name -> Alert.Cause
	2,  // 57: Alert.Preview.effect:type_name -> Alert.Effect
	4,  // 58: Public.Entrypoint:input_type -> EntrypointRequest
	6,  // 59: Public.ListSystems:input_type -> ListSystemsRequest
	8,  // 60: Public.GetSystem:input_type -> GetSystemRequest
	9,  // 61: Public.ListAgencies:input_type -> ListAgenciesRequest
	11, // 62: Public.GetAgency:input_type -> GetAgencyRequest
	12, // 63: Public.ListStops:input_type -> ListStopsRequest
	14, // 64: Public.GetStop:input_type -> GetStopRequest
	15, // 65: Public.ListRoutes:input_type -> ListRoutesRequest
	17, // 66: Public.GetRoute:input_type -> GetRouteRequest
	18, // 67: Public.ListTrips:input_type -> ListTripsRequest
	23, // 68: Public.GetTrip:input_type -> GetTripRequest
	20, // 69: Public.ListAlerts:input_type -> ListAlertsRequest
	22, // 70: Public.GetAlert:input_type -> GetAlertRequest
	24, // 71: Public.ListFeeds:input_type -> ListFeedsRequest
	28, // 72: Public.GetFeed:input_type -> GetFeedRequest
	26, // 73: Public.ListFeedUpdates:input_type -> ListFeedUpdatesRequest
	29, // 74: Public.ListTransfers:input_type -> ListTransfersRequest
	5,  // 75: Public.Entrypoint:output_type -> EntrypointReply
	7,  // 76: Public.ListSystems:output_type -> ListSystemsReply
	31, // 77: Public.GetSystem:output_type -> System
	10, // 78: Public.ListAgencies:output_type -> ListAgenciesReply
	37, // 79: Public.GetAgency:output_type -> Agency
	13, // 80: Public.ListStops:output_type -> ListStopsReply
	32, // 81: Public.GetStop:output_type -> Stop
	16, // 82: Public.ListRoutes:output_type -> ListRoutesReply
	35, // 83: Public.GetRoute:output_type -> Route
	19, // 84: Public.ListTrips:output_type -> ListTripsReply
	33, // 85: Public.GetTrip:output_type -> Trip
	21, // 86: Public.ListAlerts:output_type -> ListAlertsReply
	38, // 87: Public.GetAlert:output_type -> Alert
	25, // 88: Public.ListFeeds:output_type -> ListFeedsReply
	36, // 89: Public.GetFeed:output_type -> Feed
	27, // 90: Public.ListFeedUpdates:output_type -> ListFeedUpdatesReply
	30, // 91: Public.ListTransfers:output_type -> ListTransfersReply
	75, // [75:92] is the sub-list for method output_type
	58, // [58:75] is the sub-list for method input_type
	58, // [58:58] is the sub-list for extension type_name
	58, // [58:58] is the sub-list for extension extendee
	0,  // [0:58] is the sub-list for field type_name
}

func init() { file_api_public_proto_init() }
func file_api_public_proto_init() {
	if File_api_public_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_public_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntrypointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntrypointReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSystemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSystemsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAgenciesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAgenciesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAgencyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStopsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStopsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoutesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoutesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTripsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTripsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTripRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeedsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeedsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeedUpdatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeedUpdatesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTransfersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTransfersReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*System); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vehicle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Route); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Feed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Agency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimatedTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntrypointReply_TransiterDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntrypointReply_TransiterDetails_Build); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*System_ChildEntities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*System_Preview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stop_ServiceMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stop_StopTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stop_Preview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trip_StopTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trip_Preview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vehicle_Preview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Route_ServiceMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Route_Preview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Feed_Updates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Feed_Preview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Agency_Preview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alert_ActivePeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alert_Text); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_public_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alert_Preview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_public_proto_msgTypes[27].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[28].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[29].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[31].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[32].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[33].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[34].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[35].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[36].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[37].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[38].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[40].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[41].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[43].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[44].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[45].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[46].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[49].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[50].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[51].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[52].OneofWrappers = []interface{}{}
	file_api_public_proto_msgTypes[53].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_public_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   56,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_public_proto_goTypes,
		DependencyIndexes: file_api_public_proto_depIdxs,
		EnumInfos:         file_api_public_proto_enumTypes,
		MessageInfos:      file_api_public_proto_msgTypes,
	}.Build()
	File_api_public_proto = out.File
	file_api_public_proto_rawDesc = nil
	file_api_public_proto_goTypes = nil
	file_api_public_proto_depIdxs = nil
}
