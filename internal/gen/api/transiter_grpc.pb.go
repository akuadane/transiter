// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// TransiterClient is the client API for Transiter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TransiterClient interface {
	Entrypoint(ctx context.Context, in *EntrypointRequest, opts ...grpc.CallOption) (*EntrypointReply, error)
	ListSystems(ctx context.Context, in *ListSystemsRequest, opts ...grpc.CallOption) (*ListSystemsReply, error)
	GetSystem(ctx context.Context, in *GetSystemRequest, opts ...grpc.CallOption) (*System, error)
	ListAgenciesInSystem(ctx context.Context, in *ListAgenciesInSystemRequest, opts ...grpc.CallOption) (*ListAgenciesInSystemReply, error)
	GetAgencyInSystem(ctx context.Context, in *GetAgencyInSystemRequest, opts ...grpc.CallOption) (*Agency, error)
	ListStopsInSystem(ctx context.Context, in *ListStopsInSystemRequest, opts ...grpc.CallOption) (*ListStopsInSystemReply, error)
	GetStopInSystem(ctx context.Context, in *GetStopInSystemRequest, opts ...grpc.CallOption) (*Stop, error)
	ListRoutesInSystem(ctx context.Context, in *ListRoutesInSystemRequest, opts ...grpc.CallOption) (*ListRoutesInSystemReply, error)
	GetRouteInSystem(ctx context.Context, in *GetRouteInSystemRequest, opts ...grpc.CallOption) (*Route, error)
	ListTripsInRoute(ctx context.Context, in *ListTripsInRouteRequest, opts ...grpc.CallOption) (*ListTripsInRouteReply, error)
	GetTrip(ctx context.Context, in *GetTripRequest, opts ...grpc.CallOption) (*Trip, error)
	ListFeedsInSystem(ctx context.Context, in *ListFeedsInSystemRequest, opts ...grpc.CallOption) (*ListFeedsInSystemReply, error)
	GetFeedInSystem(ctx context.Context, in *GetFeedInSystemRequest, opts ...grpc.CallOption) (*Feed, error)
	ListFeedUpdates(ctx context.Context, in *ListFeedUpdatesRequest, opts ...grpc.CallOption) (*ListFeedUpdatesReply, error)
	ListTransfersInSystem(ctx context.Context, in *ListTransfersInSystemRequest, opts ...grpc.CallOption) (*ListTransfersInSystemReply, error)
}

type transiterClient struct {
	cc grpc.ClientConnInterface
}

func NewTransiterClient(cc grpc.ClientConnInterface) TransiterClient {
	return &transiterClient{cc}
}

func (c *transiterClient) Entrypoint(ctx context.Context, in *EntrypointRequest, opts ...grpc.CallOption) (*EntrypointReply, error) {
	out := new(EntrypointReply)
	err := c.cc.Invoke(ctx, "/Transiter/Entrypoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transiterClient) ListSystems(ctx context.Context, in *ListSystemsRequest, opts ...grpc.CallOption) (*ListSystemsReply, error) {
	out := new(ListSystemsReply)
	err := c.cc.Invoke(ctx, "/Transiter/ListSystems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transiterClient) GetSystem(ctx context.Context, in *GetSystemRequest, opts ...grpc.CallOption) (*System, error) {
	out := new(System)
	err := c.cc.Invoke(ctx, "/Transiter/GetSystem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transiterClient) ListAgenciesInSystem(ctx context.Context, in *ListAgenciesInSystemRequest, opts ...grpc.CallOption) (*ListAgenciesInSystemReply, error) {
	out := new(ListAgenciesInSystemReply)
	err := c.cc.Invoke(ctx, "/Transiter/ListAgenciesInSystem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transiterClient) GetAgencyInSystem(ctx context.Context, in *GetAgencyInSystemRequest, opts ...grpc.CallOption) (*Agency, error) {
	out := new(Agency)
	err := c.cc.Invoke(ctx, "/Transiter/GetAgencyInSystem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transiterClient) ListStopsInSystem(ctx context.Context, in *ListStopsInSystemRequest, opts ...grpc.CallOption) (*ListStopsInSystemReply, error) {
	out := new(ListStopsInSystemReply)
	err := c.cc.Invoke(ctx, "/Transiter/ListStopsInSystem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transiterClient) GetStopInSystem(ctx context.Context, in *GetStopInSystemRequest, opts ...grpc.CallOption) (*Stop, error) {
	out := new(Stop)
	err := c.cc.Invoke(ctx, "/Transiter/GetStopInSystem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transiterClient) ListRoutesInSystem(ctx context.Context, in *ListRoutesInSystemRequest, opts ...grpc.CallOption) (*ListRoutesInSystemReply, error) {
	out := new(ListRoutesInSystemReply)
	err := c.cc.Invoke(ctx, "/Transiter/ListRoutesInSystem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transiterClient) GetRouteInSystem(ctx context.Context, in *GetRouteInSystemRequest, opts ...grpc.CallOption) (*Route, error) {
	out := new(Route)
	err := c.cc.Invoke(ctx, "/Transiter/GetRouteInSystem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transiterClient) ListTripsInRoute(ctx context.Context, in *ListTripsInRouteRequest, opts ...grpc.CallOption) (*ListTripsInRouteReply, error) {
	out := new(ListTripsInRouteReply)
	err := c.cc.Invoke(ctx, "/Transiter/ListTripsInRoute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transiterClient) GetTrip(ctx context.Context, in *GetTripRequest, opts ...grpc.CallOption) (*Trip, error) {
	out := new(Trip)
	err := c.cc.Invoke(ctx, "/Transiter/GetTrip", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transiterClient) ListFeedsInSystem(ctx context.Context, in *ListFeedsInSystemRequest, opts ...grpc.CallOption) (*ListFeedsInSystemReply, error) {
	out := new(ListFeedsInSystemReply)
	err := c.cc.Invoke(ctx, "/Transiter/ListFeedsInSystem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transiterClient) GetFeedInSystem(ctx context.Context, in *GetFeedInSystemRequest, opts ...grpc.CallOption) (*Feed, error) {
	out := new(Feed)
	err := c.cc.Invoke(ctx, "/Transiter/GetFeedInSystem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transiterClient) ListFeedUpdates(ctx context.Context, in *ListFeedUpdatesRequest, opts ...grpc.CallOption) (*ListFeedUpdatesReply, error) {
	out := new(ListFeedUpdatesReply)
	err := c.cc.Invoke(ctx, "/Transiter/ListFeedUpdates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transiterClient) ListTransfersInSystem(ctx context.Context, in *ListTransfersInSystemRequest, opts ...grpc.CallOption) (*ListTransfersInSystemReply, error) {
	out := new(ListTransfersInSystemReply)
	err := c.cc.Invoke(ctx, "/Transiter/ListTransfersInSystem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransiterServer is the server API for Transiter service.
// All implementations must embed UnimplementedTransiterServer
// for forward compatibility
type TransiterServer interface {
	Entrypoint(context.Context, *EntrypointRequest) (*EntrypointReply, error)
	ListSystems(context.Context, *ListSystemsRequest) (*ListSystemsReply, error)
	GetSystem(context.Context, *GetSystemRequest) (*System, error)
	ListAgenciesInSystem(context.Context, *ListAgenciesInSystemRequest) (*ListAgenciesInSystemReply, error)
	GetAgencyInSystem(context.Context, *GetAgencyInSystemRequest) (*Agency, error)
	ListStopsInSystem(context.Context, *ListStopsInSystemRequest) (*ListStopsInSystemReply, error)
	GetStopInSystem(context.Context, *GetStopInSystemRequest) (*Stop, error)
	ListRoutesInSystem(context.Context, *ListRoutesInSystemRequest) (*ListRoutesInSystemReply, error)
	GetRouteInSystem(context.Context, *GetRouteInSystemRequest) (*Route, error)
	ListTripsInRoute(context.Context, *ListTripsInRouteRequest) (*ListTripsInRouteReply, error)
	GetTrip(context.Context, *GetTripRequest) (*Trip, error)
	ListFeedsInSystem(context.Context, *ListFeedsInSystemRequest) (*ListFeedsInSystemReply, error)
	GetFeedInSystem(context.Context, *GetFeedInSystemRequest) (*Feed, error)
	ListFeedUpdates(context.Context, *ListFeedUpdatesRequest) (*ListFeedUpdatesReply, error)
	ListTransfersInSystem(context.Context, *ListTransfersInSystemRequest) (*ListTransfersInSystemReply, error)
	mustEmbedUnimplementedTransiterServer()
}

// UnimplementedTransiterServer must be embedded to have forward compatible implementations.
type UnimplementedTransiterServer struct {
}

func (UnimplementedTransiterServer) Entrypoint(context.Context, *EntrypointRequest) (*EntrypointReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Entrypoint not implemented")
}
func (UnimplementedTransiterServer) ListSystems(context.Context, *ListSystemsRequest) (*ListSystemsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSystems not implemented")
}
func (UnimplementedTransiterServer) GetSystem(context.Context, *GetSystemRequest) (*System, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSystem not implemented")
}
func (UnimplementedTransiterServer) ListAgenciesInSystem(context.Context, *ListAgenciesInSystemRequest) (*ListAgenciesInSystemReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAgenciesInSystem not implemented")
}
func (UnimplementedTransiterServer) GetAgencyInSystem(context.Context, *GetAgencyInSystemRequest) (*Agency, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAgencyInSystem not implemented")
}
func (UnimplementedTransiterServer) ListStopsInSystem(context.Context, *ListStopsInSystemRequest) (*ListStopsInSystemReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStopsInSystem not implemented")
}
func (UnimplementedTransiterServer) GetStopInSystem(context.Context, *GetStopInSystemRequest) (*Stop, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStopInSystem not implemented")
}
func (UnimplementedTransiterServer) ListRoutesInSystem(context.Context, *ListRoutesInSystemRequest) (*ListRoutesInSystemReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRoutesInSystem not implemented")
}
func (UnimplementedTransiterServer) GetRouteInSystem(context.Context, *GetRouteInSystemRequest) (*Route, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRouteInSystem not implemented")
}
func (UnimplementedTransiterServer) ListTripsInRoute(context.Context, *ListTripsInRouteRequest) (*ListTripsInRouteReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTripsInRoute not implemented")
}
func (UnimplementedTransiterServer) GetTrip(context.Context, *GetTripRequest) (*Trip, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTrip not implemented")
}
func (UnimplementedTransiterServer) ListFeedsInSystem(context.Context, *ListFeedsInSystemRequest) (*ListFeedsInSystemReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFeedsInSystem not implemented")
}
func (UnimplementedTransiterServer) GetFeedInSystem(context.Context, *GetFeedInSystemRequest) (*Feed, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFeedInSystem not implemented")
}
func (UnimplementedTransiterServer) ListFeedUpdates(context.Context, *ListFeedUpdatesRequest) (*ListFeedUpdatesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFeedUpdates not implemented")
}
func (UnimplementedTransiterServer) ListTransfersInSystem(context.Context, *ListTransfersInSystemRequest) (*ListTransfersInSystemReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTransfersInSystem not implemented")
}
func (UnimplementedTransiterServer) mustEmbedUnimplementedTransiterServer() {}

// UnsafeTransiterServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TransiterServer will
// result in compilation errors.
type UnsafeTransiterServer interface {
	mustEmbedUnimplementedTransiterServer()
}

func RegisterTransiterServer(s grpc.ServiceRegistrar, srv TransiterServer) {
	s.RegisterService(&Transiter_ServiceDesc, srv)
}

func _Transiter_Entrypoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntrypointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransiterServer).Entrypoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Transiter/Entrypoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransiterServer).Entrypoint(ctx, req.(*EntrypointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transiter_ListSystems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSystemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransiterServer).ListSystems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Transiter/ListSystems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransiterServer).ListSystems(ctx, req.(*ListSystemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transiter_GetSystem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSystemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransiterServer).GetSystem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Transiter/GetSystem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransiterServer).GetSystem(ctx, req.(*GetSystemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transiter_ListAgenciesInSystem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAgenciesInSystemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransiterServer).ListAgenciesInSystem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Transiter/ListAgenciesInSystem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransiterServer).ListAgenciesInSystem(ctx, req.(*ListAgenciesInSystemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transiter_GetAgencyInSystem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAgencyInSystemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransiterServer).GetAgencyInSystem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Transiter/GetAgencyInSystem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransiterServer).GetAgencyInSystem(ctx, req.(*GetAgencyInSystemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transiter_ListStopsInSystem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStopsInSystemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransiterServer).ListStopsInSystem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Transiter/ListStopsInSystem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransiterServer).ListStopsInSystem(ctx, req.(*ListStopsInSystemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transiter_GetStopInSystem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStopInSystemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransiterServer).GetStopInSystem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Transiter/GetStopInSystem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransiterServer).GetStopInSystem(ctx, req.(*GetStopInSystemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transiter_ListRoutesInSystem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRoutesInSystemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransiterServer).ListRoutesInSystem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Transiter/ListRoutesInSystem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransiterServer).ListRoutesInSystem(ctx, req.(*ListRoutesInSystemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transiter_GetRouteInSystem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRouteInSystemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransiterServer).GetRouteInSystem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Transiter/GetRouteInSystem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransiterServer).GetRouteInSystem(ctx, req.(*GetRouteInSystemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transiter_ListTripsInRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTripsInRouteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransiterServer).ListTripsInRoute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Transiter/ListTripsInRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransiterServer).ListTripsInRoute(ctx, req.(*ListTripsInRouteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transiter_GetTrip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTripRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransiterServer).GetTrip(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Transiter/GetTrip",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransiterServer).GetTrip(ctx, req.(*GetTripRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transiter_ListFeedsInSystem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFeedsInSystemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransiterServer).ListFeedsInSystem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Transiter/ListFeedsInSystem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransiterServer).ListFeedsInSystem(ctx, req.(*ListFeedsInSystemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transiter_GetFeedInSystem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFeedInSystemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransiterServer).GetFeedInSystem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Transiter/GetFeedInSystem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransiterServer).GetFeedInSystem(ctx, req.(*GetFeedInSystemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transiter_ListFeedUpdates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFeedUpdatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransiterServer).ListFeedUpdates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Transiter/ListFeedUpdates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransiterServer).ListFeedUpdates(ctx, req.(*ListFeedUpdatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transiter_ListTransfersInSystem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTransfersInSystemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransiterServer).ListTransfersInSystem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Transiter/ListTransfersInSystem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransiterServer).ListTransfersInSystem(ctx, req.(*ListTransfersInSystemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Transiter_ServiceDesc is the grpc.ServiceDesc for Transiter service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Transiter_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "Transiter",
	HandlerType: (*TransiterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Entrypoint",
			Handler:    _Transiter_Entrypoint_Handler,
		},
		{
			MethodName: "ListSystems",
			Handler:    _Transiter_ListSystems_Handler,
		},
		{
			MethodName: "GetSystem",
			Handler:    _Transiter_GetSystem_Handler,
		},
		{
			MethodName: "ListAgenciesInSystem",
			Handler:    _Transiter_ListAgenciesInSystem_Handler,
		},
		{
			MethodName: "GetAgencyInSystem",
			Handler:    _Transiter_GetAgencyInSystem_Handler,
		},
		{
			MethodName: "ListStopsInSystem",
			Handler:    _Transiter_ListStopsInSystem_Handler,
		},
		{
			MethodName: "GetStopInSystem",
			Handler:    _Transiter_GetStopInSystem_Handler,
		},
		{
			MethodName: "ListRoutesInSystem",
			Handler:    _Transiter_ListRoutesInSystem_Handler,
		},
		{
			MethodName: "GetRouteInSystem",
			Handler:    _Transiter_GetRouteInSystem_Handler,
		},
		{
			MethodName: "ListTripsInRoute",
			Handler:    _Transiter_ListTripsInRoute_Handler,
		},
		{
			MethodName: "GetTrip",
			Handler:    _Transiter_GetTrip_Handler,
		},
		{
			MethodName: "ListFeedsInSystem",
			Handler:    _Transiter_ListFeedsInSystem_Handler,
		},
		{
			MethodName: "GetFeedInSystem",
			Handler:    _Transiter_GetFeedInSystem_Handler,
		},
		{
			MethodName: "ListFeedUpdates",
			Handler:    _Transiter_ListFeedUpdates_Handler,
		},
		{
			MethodName: "ListTransfersInSystem",
			Handler:    _Transiter_ListTransfersInSystem_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/transiter.proto",
}
