// Code generated by sqlc. DO NOT EDIT.
// source: system_queries.sql

package db

import (
	"context"
)

const deleteSystem = `-- name: DeleteSystem :exec
DELETE FROM system WHERE pk = $1
`

func (q *Queries) DeleteSystem(ctx context.Context, pk int64) error {
	_, err := q.db.ExecContext(ctx, deleteSystem, pk)
	return err
}

const insertSystem = `-- name: InsertSystem :one
INSERT INTO system (id, name, status) 
VALUES ($1, $2, $3)
RETURNING pk
`

type InsertSystemParams struct {
	ID     string
	Name   string
	Status string
}

func (q *Queries) InsertSystem(ctx context.Context, arg InsertSystemParams) (int64, error) {
	row := q.db.QueryRowContext(ctx, insertSystem, arg.ID, arg.Name, arg.Status)
	var pk int64
	err := row.Scan(&pk)
	return pk, err
}

const updateSystem = `-- name: UpdateSystem :exec
UPDATE system SET name = $1 WHERE pk = $2
`

type UpdateSystemParams struct {
	Name string
	Pk   int64
}

func (q *Queries) UpdateSystem(ctx context.Context, arg UpdateSystemParams) error {
	_, err := q.db.ExecContext(ctx, updateSystem, arg.Name, arg.Pk)
	return err
}
